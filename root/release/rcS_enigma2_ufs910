#!/bin/sh
#Version 200915.1

echo "Kathrein UFS910 Enigma2"

MODDIR=/lib/modules

insmod $MODDIR/e2_proc.ko

echo "[rcS] Init frontpanel"
insmod $MODDIR/ufs910_fp.ko #paramDebug=10

var=`cat /proc/boxtype`
case "$var" in
   0) echo "1W boxtype"
      echo "B" > /dev/ttyAS1
   1|3) echo "14W boxtype"
      insmod $MODDIR/button.ko
      insmod $MODDIR/led.ko;;
   *) echo "unknown boxtype";;
esac

if [ -e /var/etc/.firstboot ]; then
   echo "config.plugins.remotecontroltype.rctype=19" >> /etc/enigma2/settings
   echo "WAIT 1 min" > /dev/vfd
   echo "[rcS] WAIT 1 minute"
   rm /var/etc/.firstboot
   sleep 1
   touch /dev/.devfsd
else
   echo "LOAD 10" > /dev/vfd
   echo "[rcS] LOAD 10"
fi

/etc/init.d/mountvirtfs start

echo "Starting DEBUG Interface"
/etc/init.d/mountall start
/etc/init.d/hostname start

#green led on
fp_control -l 2 1
#led brightness
fp_control -led 80

/etc/init.d/autofs start

echo -n "[rcS] Starting telnetd "
autologin=`cat /etc/enigma2/settings | grep systemoptions.autologin | cut -d "=" -f2`
if [ ! $autologin ]; then
   /usr/sbin/telnetd -l /bin/autologin
   echo "with autologin"
else
   /usr/sbin/telnetd -l /bin/login
   echo "with normal login"
fi

echo "[rcS] Init stmfb (LOAD 9)"
echo "LOAD 9" > /dev/vfd
insmod $MODDIR/stmcore-display-sti7100.ko
#if grep -q "config.av.videoport=Scart" /etc/enigma2/settings; then
#   insmod $MODDIR/stmfb.ko display0=720x576-16@50:1m::pal:cvbs
#else
   insmod $MODDIR/stmfb.ko display0=1280x720-32@50:16m::pal:cvbs:rgb
#fi
echo "[rcS] Loading modules"
# mme bug workaround
/bin/dd if=/dev/zero of=/dev/st231-0 bs=1024 count=4096
/bin/dd if=/dev/zero of=/dev/st231-1 bs=1024 count=4096
# end mme bug wa

if [ ! -e /boot/audio.elf ] || [ ! -e /boot/video.elf ]; then
   echo "[rcS] Firmware(s) missing!"
   echo "FW MISSING!" > /dev/vfd
   sleep 5
fi

echo "[rcS] Load audio firmware (LOAD 8)"
echo "LOAD 8" > /dev/vfd
/bin/ustslave /dev/st231-1 /boot/audio.elf > /dev/null

echo "[rcS] Load video firmware (LOAD 7)"
echo "LOAD 7" > /dev/vfd
/bin/ustslave /dev/st231-0 /boot/video.elf > /dev/null

echo "[rcS] Init embx (LOAD 6)"
echo "LOAD 6" > /dev/vfd
insmod $MODDIR/embxshell.ko
insmod $MODDIR/embxmailbox.ko mailbox0=0xb9211000:136:set2 mailbox1=0xb9212000:137:set2 ;
insmod $MODDIR/embxshm.ko mailbox0=shm:0:7:0x60000000:0:256:256:0:512:0xa4000000:0x10000000 ;
insmod $MODDIR/mme_host.ko transport0=shm

echo "[rcS] Init AVS (LOAD 5)"
echo "LOAD 5" > /dev/vfd
insmod $MODDIR/avs.ko

player=`cat /proc/stb/player/version`
echo "[rcS] Init player $player (LOAD 4)"
echo "LOAD 4" > /dev/vfd
insmod $MODDIR/mmelog.ko
insmod $MODDIR/mpeg2hw.ko mmeName=MPEG2_TRANSFORMER0;
insmod $MODDIR/ksound.ko
insmod $MODDIR/p2div64.ko
insmod $MODDIR/stm_v4l2.ko
insmod $MODDIR/pseudocard.ko
insmod $MODDIR/stmvout.ko
insmod $MODDIR/stmvbi.ko

echo "[rcS] Init frontend and CI"
insmod $MODDIR/cx24116.ko
insmod $MODDIR/cimax.ko

insmod $MODDIR/pti.ko waitMS=20 videoMem=4096
if [ $? -ne 0 ]; then
   insmod $MODDIR/pti.ko
   echo "[rcS] Simple pti"
else
   echo "[rcS] Full feature pti"
fi
insmod $MODDIR/stm_monitor.ko
insmod $MODDIR/stmsysfs.ko
insmod $MODDIR/stmdvb.ko

echo "[rcS] Init player2 (LOAD 3)"
echo "LOAD 3" > /dev/vfd
insmod $MODDIR/player2.ko
insmod $MODDIR/sth264pp.ko
insmod $MODDIR/stmalloc.ko
insmod $MODDIR/platform.ko
insmod $MODDIR/silencegen.ko

insmod $MODDIR/bpamem.ko

if [ -e /boot/bootlogo.mvi ]; then
   showiframe -p /boot/bootlogo.mvi &
fi

if [ -e $MODDIR/exportfs.ko ]; then
   insmod $MODDIR/exportfs.ko
fi
if [ -e $MODDIR/cifs.ko ]; then
   insmod $MODDIR/cifs.ko
fi
if [ -e $MODDIR/ntfs.ko ]; then
   insmod $MODDIR/ntfs.ko
fi
if [ -e $MODDIR/tun.ko ]; then
   insmod $MODDIR/tun.ko
fi
if [ -e $MODDIR/usbserial.ko ]; then
   insmod $MODDIR/usbserial.ko
   if [ -e $MODDIR/ftdi.ko ]; then
      insmod $MODDIR/ftdi.ko
   fi
   if [ -e $MODDIR/pl2303.ko ]; then
      insmod $MODDIR/pl2303.ko
   fi
fi

echo "[rcS] Init frontpanel (LOAD 2)"
echo "LOAD 2" > /dev/vfd
insmod $MODDIR/simu_button.ko

echo "[rcS] Init remote control"
if [ ! -d /var/run/lirc ]; then
   mkdir -p /var/run/lirc
fi
/usr/bin/lircd
/bin/evremote2 10 120 &

NFS=`grep -c nfs /proc/cmdline`
if [ "$NFS" -eq "1" ]; then
   echo "[rcS] Booting from nfs, do not set network"
else
   if [ -e /etc/network/interfaces ]; then
      ip addr flush eth0
      /etc/init.d/networking stop
      DHCP=`grep -c 'iface eth0 inet dhcp' /etc/network/interfaces`
      if [ "$DHCP" -eq "1" ]; then
         echo "[rcS] Starting DHCP"
         /etc/init.d/udhcpc start
      fi
      /etc/init.d/networking start
   fi
fi
#Allow network to wake up and initialize
sleep 2
#Show IP address on frontpanel
#ip=`ifconfig eth0 | sed -n '/inet addr/s/.*addr.\([^ ]*\) .*/\1/p'`
#echo "IP $ip" > /dev/vfd
#sleep 3

echo -n "[rcS] Init WLAN: "
wlan=`cat /etc/enigma2/settings | grep systemoptions.wlan | cut -d "=" -f2`
if [ ! $wlan ] || [ ! -e $MODDIR/$wlan.ko ]; then
   echo "None."
else
   insmod $MODDIR/$wlan.ko
   echo "[rcS] $wlan WLAN"
#   echo "$wlan WLAN" > /dev/vfd
#   sleep 3
fi

# Start automount
if [ -e /etc/init.d/automount ]; then
   python /etc/init.d/automount &
fi

echo "[rcS] Do extras (LOAD 1)"
echo "LOAD 1" > /dev/vfd
# inadyn
inadyn=`cat /etc/enigma2/settings | grep systemoptions.inadyn | cut -d "=" -f2`
if [ ! $inadyn ] ||  [ ! -e /usr/bin/inadyn ]; then
   echo "[rcS] No inadyn"
else
   if [ -e /usr/bin/inadyn ]; then
      /usr/bin/inadyn &
   fi
fi
# OpenSSh daemon
openssh=`cat /etc/enigma2/settings | grep systemoptions.openssh | cut -d "=" -f2`
if [ ! $openssh ] || [ ! -e /etc/init.d/sshd ]; then
   echo "[rcS] No OpenSSH"
else
   if [ -e /etc/init.d/sshd ]; then
      (sleep 30; /etc/init.d/sshd start) &
   fi
fi

# Enable PKT plugins
if [ ! -e /tmp/reference.dat ] && [ -e /var/bin/reference.dat ]; then
   cp /var/bin/reference.dat /tmp
fi

# Try and synchronise time
#inettime=`cat /etc/enigma2/settings | grep systemoptions.inettime | cut -d "=" -f2`
# if [ ! $inettime ] && [ -e /sbin/ntpd ]; then
#if [ -e /sbin/ntpd ]; then
   echo "[rcS] Set internet time"
   (ntpd -n -p 0.europe.pool.ntp.org -q; /bin/fp_control -sst) &
#else
#   if [ -e /usr/sbin/time.sh ]; then
#      echo "[rcS] Use transponder time"
#      /usr/sbin/time.sh &
#   fi
#fi

echo "[rcS] Init portmap & ftp"
/etc/init.d/portmap start
/etc/init.d/vsftpd start
/usr/sbin/inetd

# Do own extras
if [ -e /etc/ownscript.sh ]; then
   /etc/ownscript.sh &
fi

echo "LOADING Enigma2" > /dev/vfd
echo "[rcS] Loading Enigma2"

stfbcontrol a 255

until false
do
   echo "[rcS] starting E2 ->"
   /usr/local/bin/enigma2
   rtv=$?
   echo "[rcS] E2 ended <- RTV: " $rtv
   case "$rtv" in
      0)  echo "[rcS] E2 ERROR"
          echo "E2 Error" > /dev/vfd
          init 6;;
      1)  echo "[rcS] SHUTDOWN"
          echo "Shutdown" > /dev/vfd
          if [ -e /usr/local/share/enigma2/shutdown.mvi ]; then
             showiframe -p /usr/local/share/enigma2/shutdown.mvi &
          fi
          init 0;;
      2)  echo "[rcS] REBOOT"
          echo "Reboot" > /dev/vfd
          init 6;;
      3)  echo "[rcS] E2 RESTART"
          echo "E2 Restart" > /dev/vfd
          echo "0" > /proc/progress
          if [ -e /usr/local/share/enigma2/backdrop.mvi ]; then
             showiframe -p /usr/local/share/enigma2/backdrop.mvi &
          else
             showiframe -p /boot/bootlogo.mvi &
          fi;;
      6)  echo "[rcS] E2 DEBUG RESTART"
          echo "E2 Debug Restart" > /dev/vfd
          echo "0" > /proc/progress
          if [ -e /usr/local/share/enigma2/backdrop.mvi ]; then
             showiframe -p /usr/local/share/enigma2/backdrop.mvi &
          else
             showiframe -p /boot/bootlogo.mvi &
          fi;;
      *)  echo "[rcS] ERROR"
          echo "Error" > /dev/vfd
          init 6;;
   esac
done

#never reached
echo "[rcS] REBOOT UFS910"
echo "REBOOT" > /dev/vfd
reboot -f
