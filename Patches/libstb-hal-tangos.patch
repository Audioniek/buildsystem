--- libstb-hal-tangos.org/acinclude.m4
+++ libstb-hal-tangos/acinclude.m4
@@ -211,6 +211,14 @@
 			BOXTYPE="duckbox"
 			BOXMODEL="$withval"
 		;;
+		adb_box)
+			BOXTYPE="duckbox"
+			BOXMODEL="$withval"
+		;;
+		vitamin_hd5000)
+			BOXTYPE="duckbox"
+			BOXMODEL="$withval"
+		;;
 		hd51|hd60|hd61|bre2ze4k|vusolo4k|vuduo4k|vuultimo4k|vuzero4k|vuuno4kse|vuuno4k)
 			BOXTYPE="armbox"
 			BOXMODEL="$withval"
@@ -227,12 +235,12 @@
 
 AC_ARG_WITH(boxmodel,
 	AS_HELP_STRING([--with-boxmodel], [valid for generic: raspi])
-AS_HELP_STRING([], [valid for duckbox: ufs910, ufs912, ufs913, ufs922, atevio7500, fortis_hdbox, octagon1008, hs7110, hs7810a, hs7119, hs7819, dp7000, cuberevo, cuberevo_mini, cuberevo_mini2, cuberevo_250hd, cuberevo_2000hd, cuberevo_3000hd, ipbox9900, ipbox99, ipbox55, arivalink200, tf7700, hl101])
+AS_HELP_STRING([], [valid for duckbox: ufs910, ufs912, ufs913, ufs922, atevio7500, fortis_hdbox, octagon1008, hs7110, hs7810a, hs7119, hs7819, dp7000, cuberevo, cuberevo_mini, cuberevo_mini2, cuberevo_250hd, cuberevo_2000hd, cuberevo_3000hd, ipbox9900, ipbox99, ipbox55, arivalink200, tf7700, hl101, adb_box, vitamin_hd5000])
 AS_HELP_STRING([], [valid for spark: spark, spark7162])
 AS_HELP_STRING([], [valid for armbox: hd51, hd60, hd61, bre2ze4k, vusolo4k, vuduo4k, vuultimo4k, vuzero4k, vuuno4kse, vuuno4k])
 AS_HELP_STRING([], [valid for mipsbox: vuduo]),
 	[case "${withval}" in
-		ufs910|ufs912|ufs913|ufs922|atevio7500|fortis_hdbox|octagon1008|hs7110|hs7810a|hs7119|hs7819|dp7000|cuberevo|cuberevo_mini|cuberevo_mini2|cuberevo_250hd|cuberevo_2000hd|cuberevo_3000hd|ipbox9900|ipbox99|ipbox55|arivalink200|tf7700|hl101)
+		ufs910|ufs912|ufs913|ufs922|atevio7500|fortis_hdbox|octagon1008|hs7110|hs7810a|hs7119|hs7819|dp7000|cuberevo|cuberevo_mini|cuberevo_mini2|cuberevo_250hd|cuberevo_2000hd|cuberevo_3000hd|ipbox9900|ipbox99|ipbox55|arivalink200|tf7700|hl101|adb_box|vitamin_hd5000)
 			if test "$BOXTYPE" = "duckbox"; then
 				BOXMODEL="$withval"
 			else
@@ -310,6 +318,8 @@
 AM_CONDITIONAL(BOXMODEL_ARIVALINK200, test "$BOXMODEL" = "arivalink200")
 AM_CONDITIONAL(BOXMODEL_TF7700, test "$BOXMODEL" = "tf7700")
 AM_CONDITIONAL(BOXMODEL_HL101, test "$BOXMODEL" = "hl101")
+AM_CONDITIONAL(BOXMODEL_ADB_BOX, test "$BOXMODEL" = "adb_box")
+AM_CONDITIONAL(BOXMODEL_VITAMIN_HD5000, test "$BOXMODEL" = "vitamin_hd5000")
 
 AM_CONDITIONAL(BOXMODEL_HD51, test "$BOXMODEL" = "hd51")
 AM_CONDITIONAL(BOXMODEL_HD60, test "$BOXMODEL" = "hd60")
@@ -396,6 +406,10 @@
 	AC_DEFINE(BOXMODEL_TF7700, 1, [tf7700])
 elif test "$BOXMODEL" = "hl101"; then
 	AC_DEFINE(BOXMODEL_HL101, 1, [hl101])
+elif test "$BOXMODEL" = "adb_box"; then
+	AC_DEFINE(BOXMODEL_ADB_BOX, 1, [adb_box])
+elif test "$BOXMODEL" = "vitamin_hd5000"; then
+	AC_DEFINE(BOXMODEL_VITAMIN_HD5000, 1, [vitamin_hd5000])
 elif test "$BOXMODEL" = "hd51"; then
 	AC_DEFINE(BOXMODEL_HD51, 1, [hd51])
 elif test "$BOXMODEL" = "hd60"; then
 elif test "$BOXMODEL" = "vusolo4k"; then
--- libstb-hal-tangos.org/include/cs_frontpanel.h
+++ libstb-hal-tangos/include/cs_frontpanel.h
@@ -28,7 +28,7 @@
 
 typedef enum {
 #if defined(BOXMODEL_OCTAGON1008)
-	ICON_DOLBY = 0x10,
+	ICON_DOLBY = 1,
 	ICON_DTS,
 	ICON_VIDEO,
 	ICON_AUDIO,
@@ -49,6 +49,7 @@
 	ICON_PLAY,
 	ICON_REWIND,
 	ICON_PAUSE,
+	ICON_NONE,
 	ICON_FF,
 	ICON_REC,
 	ICON_ARROW,
@@ -56,15 +57,16 @@
 	ICON_COLON2,
 	ICON_COLON3,
 	ICON_MAX,
+	FP_ICON_MIN = ICON_DOLBY,
 	FP_ICON_USB = ICON_USB,
 	FP_ICON_HD = ICON_16_9,
 	FP_ICON_HDD = ICON_HDD,
 	FP_ICON_LOCK = ICON_CRYPTED,
-	FP_ICON_BT,
-	FP_ICON_MP3,
-	FP_ICON_MUSIC,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = 0,
+	FP_ICON_MUSIC = 0,
 	FP_ICON_DD = ICON_DOLBY,
-	FP_ICON_MAIL,
+	FP_ICON_MAIL = 0,
 	FP_ICON_MUTE = ICON_TIME,
 	FP_ICON_PLAY = ICON_PLAY,
 	FP_ICON_PAUSE = ICON_PAUSE,
@@ -72,18 +74,153 @@
 	FP_ICON_FR = ICON_REWIND,
 	FP_ICON_REC = ICON_REC,
 	FP_ICON_CLOCK = ICON_TIMER,
+	FP_ICON_TIMESHIFT = 0,
 	FP_ICON_RADIO = ICON_AUDIO,
 	FP_ICON_TV = ICON_VIDEO,
 	FP_ICON_DOWNLOAD = ICON_LINK,
 	FP_ICON_CAM1 = ICON_REC,
+	FP_ICON_MAX = ICON_MAX
+#elif defined(BOXMODEL_HS7420) \
+ || defined(BOXMODEL_HS7429)
+	ICON_DOT = 1,
+	ICON_COLON1,
+	ICON_COLON2,
+	ICON_COLON3,
+	ICON_MAX,
+	FP_ICON_MIN = ICON_DOT,
+	FP_ICON_USB = 0,
+	FP_ICON_HD = 0,
+	FP_ICON_HDD = 0,
+	FP_ICON_LOCK = 0,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = 0,
+	FP_ICON_MUSIC = 0,
+	FP_ICON_DD = 0,
+	FP_ICON_MAIL = 0,
+	FP_ICON_MUTE = 0,
+	FP_ICON_PLAY = 0,
+	FP_ICON_PAUSE = 0,
+	FP_ICON_FF = 0,
+	FP_ICON_FR = 0,
+	FP_ICON_REC = 0,
+	FP_ICON_CLOCK = 0,
+	FP_ICON_TIMESHIFT = 0,
+	FP_ICON_RADIO = 0,
+	FP_ICON_TV = 0,
+	FP_ICON_DOWNLOAD = 0,
+	FP_ICON_CAM1 = 0,
+	FP_ICON_MAX = ICON_MAX
+#elif defined(BOXMODEL_HS7119)
+	ICON_COLON = 1,     // 01
+	FP_ICON_MIN = ICON_COLON,
+	FP_ICON_USB = 0,
+	FP_ICON_HD = 0,
+	FP_ICON_HDD = 0,
+	FP_ICON_LOCK = 0,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = 0,
+	FP_ICON_MUSIC = 0,
+	FP_ICON_DD = 0,
+	FP_ICON_MAIL = 0,
+	FP_ICON_MUTE = 0,
+	FP_ICON_PLAY = 0,
+	FP_ICON_PAUSE = 0,
+	FP_ICON_FF = 0,
+	FP_ICON_FR = 0,
+	FP_ICON_REC = 0,
+	FP_ICON_CLOCK = 0,
+	FP_ICON_TIMESHIFT = 0,
+	FP_ICON_RADIO = 0,
+	FP_ICON_TV = 0,
+	FP_ICON_DOWNLOAD = 0,
+	FP_ICON_CAM1 = 0,
+	FP_ICON_MAX = ICON_COLON
+#elif defined(BOXMODEL_ATEVIO7500)
+	ICON_STANDBY = 1, // 01
+	ICON_REC,         // 02
+	ICON_TIMESHIFT,   // 03
+	ICON_TIMER,       // 04
+	ICON_HD,          // 05
+	ICON_USB,         // 06
+	ICON_SCRAMBLED,   // 07
+	ICON_DOLBY,       // 08
+	ICON_MUTE,        // 09
+	ICON_TUNER1,      // 10
+	ICON_TUNER2,      // 11
+	ICON_MP3,         // 12
+	ICON_REPEAT,      // 13
+	ICON_PLAY,        // 14
+	ICON_STOP,        // 15
+	ICON_PAUSE,       // 16
+	ICON_REWIND,      // 17
+	ICON_FF,          // 18
+	ICON_STEP_BACK,   // 19
+	ICON_STEP_FWD,    // 20
+	ICON_TV,          // 21
+	ICON_RADIO,       // 22
+	ICON_MAX,         // 23
+	ICON_SPINNER,     // 24
+	FP_ICON_MIN = ICON_STANDBY,
+	FP_ICON_USB = ICON_USB,
+	FP_ICON_HD = ICON_HD,
+	FP_ICON_HDD = 0,
+	FP_ICON_LOCK = ICON_SCRAMBLED,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = ICON_MP3,
+	FP_ICON_MUSIC = 0,
+	FP_ICON_DD = ICON_DOLBY,
+	FP_ICON_MAIL = 0,
+	FP_ICON_MUTE = ICON_MUTE,
+	FP_ICON_PLAY = ICON_PLAY,
+	FP_ICON_PAUSE = ICON_PAUSE,
+	FP_ICON_FF = ICON_FF,
+	FP_ICON_FR = ICON_REWIND,
+	FP_ICON_REC = ICON_REC,
+	FP_ICON_CLOCK = ICON_TIMER,
+	FP_ICON_TIMESHIFT = ICON_TIMESHIFT,
+	FP_ICON_RADIO = ICON_RADIO,
+	FP_ICON_TV = ICON_TV,
+	FP_ICON_DOWNLOAD = 0,
+	FP_ICON_CAM1 = 0,
+	FP_ICON_MAX = ICON_MAX
+#elif defined(BOXMODEL_HS7810A) \
+ || defined(BOXMODEL_HS7819)
+	ICON_COLON = 1, // 01
+	ICON_PERIOD1,   // 02
+	ICON_PERIOD2,   // 03
+	ICON_PERIOD3,   // 04
+	ICON_MAX,       // 05
+	FP_ICON_MIN = ICON_COLON,
+	FP_ICON_USB = 0,
+	FP_ICON_HD = 0,
+	FP_ICON_HDD = 0,
+	FP_ICON_LOCK = 0,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = 0,
+	FP_ICON_MUSIC = 0,
+	FP_ICON_DD = 0,
+	FP_ICON_MAIL = 0,
+	FP_ICON_MUTE = 0,
+	FP_ICON_PLAY = 0,
+	FP_ICON_PAUSE = 0,
+	FP_ICON_FF = 0,
+	FP_ICON_FR = 0,
+	FP_ICON_REC = 0,
+	FP_ICON_CLOCK = 0,
+	FP_ICON_TIMESHIFT = 0,
+	FP_ICON_RADIO = 0,
+	FP_ICON_TV = 0,
+	FP_ICON_DOWNLOAD = 0,
+	FP_ICON_CAM1 = 0,
+	FP_ICON_MAX = ICON_MAX
 #elif defined(BOXMODEL_FORTIS_HDBOX)
-	ICON_USB = 0x10,
-	ICON_STANDBY,
+	ICON_STANDBY = 1,
 	ICON_SAT,
 	ICON_REC,
 	ICON_TIMESHIFT,
 	ICON_TIMER,
 	ICON_HD,
+	ICON_USB,
 	ICON_SCRAMBLED,
 	ICON_DOLBY,
 	ICON_MUTE,
@@ -92,15 +229,6 @@
 	ICON_MP3,
 	ICON_REPEAT,
 	ICON_Play,
-	ICON_TER,
-	ICON_FILE,
-	ICON_480i,
-	ICON_480p,
-	ICON_576i,
-	ICON_576p,
-	ICON_720p,
-	ICON_1080i,
-	ICON_1080p,
 	ICON_Circ0,
 	ICON_Circ1,
 	ICON_Circ2,
@@ -110,6 +238,15 @@
 	ICON_Circ6,
 	ICON_Circ7,
 	ICON_Circ8,
+	ICON_FILE,
+	ICON_TER,
+	ICON_480i,
+	ICON_480p,
+	ICON_576i,
+	ICON_576p,
+	ICON_720p,
+	ICON_1080i,
+	ICON_1080p,
 	ICON_COLON1,
 	ICON_COLON2,
 	ICON_COLON3,
@@ -117,6 +254,7 @@
 	ICON_TV,
 	ICON_RADIO,
 	ICON_MAX,
+	FP_ICON_MIN = ICON_STANDBY,
 	FP_ICON_USB = ICON_USB,
 	FP_ICON_REC = ICON_REC,
 	FP_ICON_CAM1 = ICON_REC,
@@ -138,8 +276,87 @@
 	FP_ICON_TV = ICON_TV,
 	FP_ICON_MUSIC = ICON_RADIO,
 	FP_ICON_MAX = ICON_MAX
-#elif defined(BOXMODEL_UFS910) || defined(BOXMODEL_UFS922) || defined(BOXMODEL_UFS912) || defined(BOXMODEL_UFS913)
+#elif defined(BOXMODEL_TF7700)
+	ICON_CD1 = 32,
+	ICON_CD2,
+	ICON_CD3,
+	ICON_CD4,
+	ICON_CD5,
+	ICON_CD6,
+	ICON_CD7,
+	ICON_CD8,
+	ICON_CD9,
+	ICON_CDCENTER,
+	ICON_HDD = 48,
+	ICON_HDD_1,
+	ICON_HDD_2,
+	ICON_HDD_3,
+	ICON_HDD_4,
+	ICON_HDD_5,
+	ICON_HDD_6,
+	ICON_HDD_7,
+	ICON_HDD_8,
+	ICON_HDD_FRAME,
+	ICON_HDD_FULL,
+	ICON_MP3 = 64,
+	ICON_AC3,
+	ICON_TIMESHIFT,
+	ICON_TV,
+	ICON_MUSIC,
+	ICON_DISH,
+	ICON_REC,
+	ICON_TUNER1,
+	ICON_TUNER2,
+	ICON_RWD,
+	ICON_STEPBACK,
+	ICON_PLAY,
+	ICON_STEPFWD,
+	ICON_FWD,
+	ICON_PAUSE,
+	ICON_MUTE,
+	ICON_AUTOREWLEFT,
+	ICON_AUTOREWRIGHT,
+	ICON_DOLLAR,
+	ICON_ATTN,
+	ICON_DOLBY,
+	ICON_NETWORK,
+	ICON_AM,
+	ICON_TIMER,
+	ICON_PM,
+	ICON_IRDOT,
+	ICON_POWER,
+	ICON_COLON,
+	ICON_MAX,
+	FP_ICON_MIN = ICON_CD1,
+	FP_ICON_USB = 0,
+	FP_ICON_REC = ICON_REC,
+	FP_ICON_RECORD = ICON_REC,
+	FP_ICON_CLOCK = ICON_TIMER,
+	FP_ICON_HD = ICON_NETWORK,
+	FP_ICON_LOCK = ICON_DOLLAR,
+	FP_ICON_DD = ICON_DOLBY,
+	FP_ICON_MUTE = ICON_MUTE,
+	FP_ICON_BT = 0,
+	FP_ICON_MP3 = ICON_MP3,
+	FP_ICON_PLAY = ICON_PLAY,
+	FP_ICON_PAUSE = ICON_PAUSE,
+	FP_ICON_HDD = 0,
+	FP_ICON_MUSIC = ICON_MUSIC,
+	FP_ICON_MAIL = 0,
+	FP_ICON_FF = ICON_FWD,
+	FP_ICON_FR = ICON_RWD,
+	FP_ICON_RADIO = ICON_MUSIC,
+	FP_ICON_TV = ICON_TV,
+	FP_ICON_CAM1 = 0,
+	FP_ICON_DOWNLOAD = 0,
+	FP_ICON_TIMESHIFT = ICON_TIMESHIFT,
+	FP_ICON_MAX = ICON_MAX
+#elif defined(BOXMODEL_UFS910) \
+ || defined(BOXMODEL_UFS922) \
+ || defined(BOXMODEL_UFS912) \
+ || defined(BOXMODEL_UFS913)
 	FP_ICON_USB = 0x10,
+	FP_ICON_MIN= FP_ICON_USB,
 	FP_ICON_HD,
 	FP_ICON_HDD,
 	FP_ICON_LOCK,
@@ -162,7 +379,8 @@
 	FP_ICON_RECORD = FP_ICON_REC,
 	FP_ICON_DOWNLOAD = 0,
 	FP_ICON_TIMESHIFT = 0
-#elif defined(BOXMODEL_IPBOX9900) || defined(BOXMODEL_IPBOX99)
+#elif defined(BOXMODEL_IPBOX9900) \
+   || defined(BOXMODEL_IPBOX99)
 	ICON_STANDBY,
 	ICON_SAT,
 	ICON_REC,
@@ -218,9 +436,9 @@
 	FP_ICON_TV = 0,
 	FP_ICON_MAIL = 0,
 	FP_ICON_BT = 0,
-
 #else
 	FP_ICON_USB = 0x10,
+	FP_ICON_MIN = FP_ICON_USB,
 	FP_ICON_HD,
 	FP_ICON_HDD,
 	FP_ICON_LOCK,
@@ -242,8 +460,20 @@
 	FP_ICON_RECORD = FP_ICON_REC,
 	FP_ICON_DOWNLOAD,
 	FP_ICON_TIMESHIFT,
+#if 0
+ if !defined(BOXMODEL_UFS910)
+ && !defined(BOXMODEL_UFS922)
+ && !defined(BOXMODEL_UFS912)
+ && !defined(BOXMODEL_UFS913)
+ && !defined(BOXMODEL_FORTIS_HDBOX)
+ && !defined(BOXMODEL_TF7700)
+ && !defined(BOXMODEL_UFS910)
+ && !defined(BOXMODEL_UFS922)
+ && !defined(BOXMODEL_UFS912)
+ && !defined(BOXMODEL_UFS913)
+ && !defined(BOXMODEL_IPBOX9900)
+ && !defined(BOXMODEL_IPBOX99)
 #endif
-#if !defined(BOXMODEL_UFS910) && !defined(BOXMODEL_UFS922) && !defined(BOXMODEL_UFS912) && !defined(BOXMODEL_UFS913) && !defined(BOXMODEL_FORTIS_HDBOX)
 	FP_ICON_MAX
 #endif
 } fp_icon;
 
-typedef enum {
+typedef enum
+{
 	FP_FLAG_NONE			= 0x00,
 	FP_FLAG_SCROLL_ON		= 0x01,	/* switch scrolling on */
-	FP_FLAG_SCROLL_LTR		= 0x02,	/* scroll from left to rightinstead of default right to left direction (i.e. for arabic text) */
+	FP_FLAG_SCROLL_LTR		= 0x02,	/* scroll from left to right instead of default right to left direction (i.e. for arabic text) */
 	FP_FLAG_SCROLL_SIO		= 0x04,	/* start/stop scrolling with empty screen (scroll in/out) */
 	FP_FLAG_SCROLL_DELAY		= 0x08,	/* delayed scroll start */
 	FP_FLAG_ALIGN_LEFT		= 0x10,	/* align the text in display from the left (default) */
@@ -259,7 +475,8 @@
 	FP_FLAG_UPDATE_SCROLL_POS	= 0x40,	/* update the current position for scrolling */
 } fp_flag;
 
-typedef struct {
+typedef struct
+{
 	unsigned char		brightness;
 	unsigned char		flags;
 	unsigned char		current_hour;
@@ -268,7 +485,8 @@
 	unsigned char		timer_minutes_lo;
 } fp_standby_data_t;
 
-typedef enum {
+typedef enum
+{
 	FP_LED_1_ON		= 0x81,
 	FP_LED_2_ON		= 0x82,
 	FP_LED_3_ON		= 0x83,
@@ -277,13 +495,15 @@
 	FP_LED_3_OFF		= 0x03,
 } fp_led_ctrl_t;
 
-typedef struct {
+typedef struct
+{
 	unsigned char		source;
 	unsigned char		time_minutes_hi;
 	unsigned char		time_minutes_lo;
 } fp_wakeup_data_t;
 
-typedef enum {
+typedef enum
+{
 	FP_WAKEUP_SOURCE_TIMER  = 0x01,
 	FP_WAKEUP_SOURCE_BUTTON = 0x02,
 	FP_WAKEUP_SOURCE_REMOTE = 0x04,
@@ -291,25 +511,29 @@
 	FP_WAKEUP_SOURCE_POWER  = 0xFF
 } fp_wakeup_source;
 
-typedef struct {
+typedef struct
+{
 	unsigned short		addr;
 	unsigned short		cmd;
 } fp_standby_cmd_data_t;
 
-typedef enum {
+typedef enum
+{
 	FP_DISPLAY_TEXT_NONE	= 0,
 	FP_DISPLAY_TEXT_LIMITED,
 	FP_DISPLAY_TEXT_ALL,
 } fp_display_text_type_t;
 
-typedef enum {
+typedef enum
+{
 	FP_DISPLAY_TYPE_NONE	= 0,
 	FP_DISPLAY_TYPE_VFD,
 	FP_DISPLAY_TYPE_OLED,
 	FP_DISPLAY_TYPE_LED_SEGMENT
 } fp_display_type_t;
 
-typedef struct {
+typedef struct
+{
 	fp_display_type_t	display_type;
 	unsigned short		xres, yres;
 	unsigned int		segment_count;
#--- libstb-hal-tangos.org/include/hardware_caps.h
#+++ libstb-hal-tangos/include/hardware_caps.h
#@@ -46,6 +46,8 @@
# 	char boxarch[64];
# 	int boxtype;
# 	int has_CI;
#+	int has_button_timer;
#+	int has_button_vformat;
# } hw_caps_t;
# 
# hw_caps_t *get_hwcaps(void);
--- libstb-hal-tangos.org/libduckbox/hardware_caps.c
+++ libstb-hal-tangos/libduckbox/hardware_caps.c
@@ -138,6 +138,15 @@
 			caps.can_cec = 1;
 			caps.has_fan = 0;
 		}
+		else if (!strncmp(buf, "hs7420", 6)) {
+			strcpy(caps.boxvendor, "DUCKBOX");
+			strcpy(caps.boxname, buf);
+			caps.can_shutdown = 1;
+			caps.has_HDMI = 1;
+			caps.has_SCART = 1;
+			caps.can_cec = 1;
+			caps.has_fan = 0;
+		}
 		else if (!strncmp(buf, "hs7810a", 7)) {
 			strcpy(caps.boxvendor, "DUCKBOX");
 			strcpy(caps.boxname, buf);
@@ -148,6 +157,15 @@
 			caps.has_fan = 0;
 		}
 		else if (!strncmp(buf, "hs7119", 6)) {
+			strcpy(caps.boxvendor, "DUCKBOX");
+			strcpy(caps.boxname, buf);
+			caps.can_shutdown = 1;
+			caps.has_HDMI = 1;
+			caps.has_SCART = 1;
+			caps.can_cec = 1;
+			caps.has_fan = 0;
+		}
+		else if (!strncmp(buf, "hs7429", 6)) {
 			strcpy(caps.boxvendor, "DUCKBOX");
 			strcpy(caps.boxname, buf);
 			caps.can_shutdown = 1;
--- libstb-hal-tangos.org/libeplayer3-sh4/input.cpp
+++ libstb-hal-tangos/libeplayer3-sh4/input.cpp
@@ -452,14 +452,15 @@
 	avfc->iformat->flags |= AVFMT_SEEK_TO_PTS;
 	avfc->flags = AVFMT_FLAG_GENPTS;
 	if (player->noprobe) {
-#if (LIBAVFORMAT_VERSION_MAJOR <  55) || \
-    (LIBAVFORMAT_VERSION_MAJOR == 55 && LIBAVFORMAT_VERSION_MINOR <  43) || \
-    (LIBAVFORMAT_VERSION_MAJOR == 55 && LIBAVFORMAT_VERSION_MINOR == 43 && LIBAVFORMAT_VERSION_MICRO < 100) || \
-    (LIBAVFORMAT_VERSION_MAJOR == 57 && LIBAVFORMAT_VERSION_MINOR == 25)
+//#if (LIBAVFORMAT_VERSION_MAJOR <  55) || \
+//    (LIBAVFORMAT_VERSION_MAJOR == 55 && LIBAVFORMAT_VERSION_MINOR <  43) || \
+//    (LIBAVFORMAT_VERSION_MAJOR == 55 && LIBAVFORMAT_VERSION_MINOR == 43 && LIBAVFORMAT_VERSION_MICRO < 100) || \
+//    (LIBAVFORMAT_VERSION_MAJOR == 57 && LIBAVFORMAT_VERSION_MINOR == 25)
+//		avfc->max_analyze_duration = 1;
+//#else
+//		avfc->max_analyze_duration2 = 1;
+//#endif
 		avfc->max_analyze_duration = 1;
-#else
-		avfc->max_analyze_duration2 = 1;
-#endif
 		avfc->probesize = 131072;
 	}
 #if 0
#--- libstb-hal-tangos/include/hardware_caps.h
#+++ libstb-hal-tangos/include/hardware_caps.h
#@@ -39,6 +39,7 @@
# 	int display_can_set_brightness;
# 	int display_can_deepstandby;
# 	int display_has_statusline;
#+	int has_button_timer;
# 	char boxvendor[64];
# 	char boxname[64];
# 	char boxarch[64];
--- libstb-hal-tangos/tools/spark_fp.c.org
+++ libstb-hal-tangos/tools/spark_fp.c
@@ -30,6 +30,10 @@
 #include <time.h>
 #include <unistd.h>
 #include <sys/ioctl.h>
+
+struct semaphore {
+	int dummy;
+};
 #include <aotom_main.h>
 
 #define FP_DEV "/dev/vfd"
@@ -38,7 +42,7 @@
 {
 	printf("usage spark_fp <option>\n");
 	printf("\t-g: get wakeup reason (return code == reason)\n");
-	printf("\t-T: get FP display type (1 = VFD, 2 = LCD, 4 = LED, 8 = LBD)\n");
+	printf("\t-T: get FP display type (1 = VFD, 2 = LCD, 3 = DVFD, 4 = LED, 8 = LBD)\n");
 	printf("\t-t: get current FP time\n");
 	printf("\t-s <time>: set FP time (time = 0: use current time)\n");
 	printf("\t-w <time>: set FP wakeup time (time = 1: no wakeup)\n");
@@ -129,6 +133,7 @@
 	struct aotom_ioctl_data aotom;
 	memset(&aotom, 0, sizeof(aotom));
 	int ret, c, val;
+	YWPANEL_Version_t version;
 	time_t t, t2, diff;
 	struct tm *tmp;
 	int period = LOG_ON;
@@ -245,13 +250,17 @@
 				ioctl(fd, VFDICONDISPLAYONOFF, &aotom);
 				break;
 			case 'T':
-				ret = ioctl(fd, VFDGETVERSION, &val);
+				ret = ioctl(fd, VFDGETVERSION, &version);
 				if (ret < 0)
 					perror("ioctl VFDGETVERSION");
 				else
 				{
-					printf("%d\n", val);
-					ret = val;
+					printf("Displaytype is %d\n", version.DisplayInfo);
+//					if (version.DisplayInfo == 3) //if DVFD
+//					{
+//						return 1; //return VFD
+//					}
+					ret = version.DisplayInfo;
 				}
 				break;
 // Reminder to myself, here's a semi-sane default for Pingulux boxes:
--- libstb-hal-tangos/libspark/hardware_caps.c.org
+++ libstb-hal-tangos/libspark/hardware_caps.c
@@ -14,6 +14,10 @@
 #include <string.h>
 #include <unistd.h>
 #include <sys/ioctl.h>
+
+struct semaphore {
+	int dummy;
+};
 #include <aotom_main.h>
 
 #include <hardware_caps.h>
@@ -44,30 +48,52 @@
 	const char *tmp;
 	char buf[1024];
 	int len = -1, ret, val;
+	YWPANEL_Version_t version;
 	int fd = open (FP_DEV, O_RDWR);
-	if (fd != -1) {
-		ret = ioctl(fd, VFDGETVERSION, &val);
+	if (fd != -1)
+	{
+		ret = ioctl(fd, VFDGETVERSION, &version);
 		if (ret < 0)
+		{
 			fprintf(stderr, "[hardware_caps] %s: VFDGETVERSION %m\n", __func__);
-		else if (val & 1) { /* VFD = 1, DVFD = 3 */
+		}
+		else if (version.DisplayInfo == 1) /* VFD = 1 */
+		{
 			caps.display_type = HW_DISPLAY_LINE_TEXT;
 			caps.display_xres = 8;
 			caps.display_can_set_brightness = 1;
 		}
-		close(fd);
+		else if (version.DisplayInfo == 3) /* DVFD = 3 */
+		{
+			caps.display_type = HW_DISPLAY_LINE_TEXT;
+			ret = ioctl(fd, VFDGETDISPLAYTIME, &val);
+			if (val == 1)
+			{
+				caps.display_xres = 10;
+			}
+			else
+			{
+				caps.display_xres = 16;
+			}
+		}
 	}
+	close(fd);
 	fd = open("/proc/cmdline", O_RDONLY);
-	if (fd != -1) {
+	if (fd != -1)
+	{
 		len = read(fd, buf, sizeof(buf) - 1);
 		close(fd);
 	}
-	if (len > 0) {
+	if (len > 0)
+	{
 		buf[len] = 0;
 		char *p = strstr(buf, "STB_ID=");
 		int h0, h1, h2;
-		if (p && sscanf(p, "STB_ID=%x:%x:%x:", &h0, &h1, &h2) == 3) {
+		if (p && sscanf(p, "STB_ID=%x:%x:%x:", &h0, &h1, &h2) == 3)
+		{
 			int sys_id = (h0 << 16) | (h1 << 8) | h2;
-			switch (sys_id) {
+			switch (sys_id)
+			{
 				case 0x090003:
 					tmp = "Truman Premier 1+";
 					break;
@@ -155,7 +181,8 @@
 				caps.boxtype = 7111;
 			else
 				caps.boxtype = 7162;
-		} else
+		}
+		else
 			tmp = "(NO STB_ID FOUND)";
 		strcpy(caps.boxname, tmp);
 	}

