--- neutrino-mp-max/src/driver/vfd.cpp
+++ neutrino-mp-max/src/driver/vfd.cpp
@@ -85,23 +85,33 @@
 
 static void write_to_vfd(unsigned int DevType, struct vfd_ioctl_data * data, bool force = false)
 {
-	int file_closed = 0;
-	if (blocked) {
-		if (file_vfd > -1) {
+	int file_closed;
+
+	if (blocked)
+	{
+		if (file_vfd > -1)
+		{
 			blocked_counter++;
 			usleep(SCROLL_TIME);
-		} else {
+		}
+		else
+		{
 			blocked = false;
 		}
 	}
-	if (blocked_counter > 10) {
+	if (blocked_counter > 10)
+	{
 		force = true;
 		blocked_counter = 0;
 	}
 //	printf("[CVFD] - blocked_counter=%i, blocked=%i, force=%i\n", blocked, blocked_counter, force);
-	if (force || !blocked) {
-		if (blocked) {
-			if (file_vfd > -1) {
+	if (force || !blocked)
+	{
+		file_closed = 0;
+		if (blocked)
+		{
+			if (file_vfd > -1)
+			{
 				file_closed = close(file_vfd);
 				file_vfd = -1;
 			}
@@ -822,17 +832,22 @@
 #else
 		ShowIcon(FP_ICON_FRAME, true);
 		int pp = (vol * 8 + 50) / 100;
-		if(pp > 8) pp = 8;
-
-		if(force_update || oldpp != pp) {
+		if (pp > 8)
+		{
+			pp = 8;
+		}
+		if (force_update || oldpp != pp)
+		{
 printf("CVFD::showVolume: %d, bar %d\n", (int) vol, pp);
 			int i;
 			int j = 0x00000200;
-			for(i = 0; i < pp; i++) {
+			for (i = 0; i < pp; i++)
+			{
 				ShowIcon((fp_icon) j, true);
 				j /= 2;
 			}
-			for(;i < 8; i++) {
+			for (;i < 8; i++)
+			{
 				ShowIcon((fp_icon) j, false);
 				j /= 2;
 			}
@@ -842,45 +857,59 @@
 	}
 }
 
-void CVFD::showPercentOver(const unsigned char perc, const bool /*perform_update*/, const MODES origin)
-{
 #if HAVE_DUCKBOX_HARDWARE
+void CVFD::showPercentOver(const unsigned char perc, const bool /*perform_update*/, const MODES)
+{
 	return;
 #else
-
+void CVFD::showPercentOver(const unsigned char perc, const bool /*perform_update*/, const MODES origin)
+{
 	static int ppold = 0;
 	if(!has_lcd) return;
 
 	percentOver = perc;
 
 	if (mode == MODE_AUDIO && origin != MODE_AUDIO) // exclusive access for audio mode
-		return;
-
+	{
+		return;
+	}
 	if (g_settings.lcd_setting[SNeutrinoSettings::LCD_SHOW_VOLUME] == 2 /* off */)
-		return;
-
+	{
+		return;
+	}
 	bool allowed_mode = (mode == MODE_TVRADIO || mode == MODE_AUDIO || mode == MODE_MENU_UTF8);
 	if (!allowed_mode)
-		return;
-
-	if (g_settings.lcd_setting[SNeutrinoSettings::LCD_SHOW_VOLUME] == 0) {
+	{
+		return;
+	}
+	if (g_settings.lcd_setting[SNeutrinoSettings::LCD_SHOW_VOLUME] == 0)
+	{
 		ShowIcon(FP_ICON_FRAME, true);
 		int pp;
 		if(perc == 255)
+		{
 			pp = 0;
+		}
 		else
+		{
 			pp = (perc * 8 + 50) / 100;
-		if(pp > 8) pp = 8;
-
-		if(pp != ppold) {
+		}
+		if (pp > 8)
+		{
+			pp = 8;
+		}
+		if(pp != ppold)
+		{
 //printf("CVFD::showPercentOver: %d, bar %d\n", (int) perc, pp);
 			int i;
 			int j = 0x00000200;
-			for(i = 0; i < pp; i++) {
+			for (i = 0; i < pp; i++)
+			{
 				ShowIcon((fp_icon) j, true);
 				j /= 2;
 			}
-			for(;i < 8; i++) {
+			for (; i < 8; i++)
+			{
 				ShowIcon((fp_icon) j, false);
 				j /= 2;
 			}

