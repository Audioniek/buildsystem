--- a/arch/sh/kernel/setup.c.orig
+++ b/arch/sh/kernel/setup.c
@@ -420,6 +420,34 @@
 #endif
 #endif
 
+	{
+		char org_command_line[] = "console=ttyAS1,115200 root=/dev/mtdblock3";
+		char tdt_command_line[] = "console=ttyAS1,115200 root=/dev/mtdblock4 rw rootfstype=jffs2 init=/bin/devinit coprocessor_mem=4m@0x10000000,4m@0x10400000 printk=1 console_loglevel=7 stmmaceth=ethaddr:";
+		char mac[] = "00:00:00:00:00:00";
+		int command_line_len = strlen(command_line);
+		int org_command_line_len = strlen(org_command_line);
+
+		if (command_line_len >= org_command_line_len && !strncmp(command_line, org_command_line, org_command_line_len))
+		{
+			int i;
+			for (i = 0; i < (command_line_len - 7); i++)
+			{
+				if (!strncmp(command_line + i, "ethaddr", 7))
+				{
+					strlcpy(mac, command_line + i + 8, sizeof(mac));
+					break;
+				}
+				if (!strncmp(command_line + i, "hwaddr", 6))
+				{
+					strlcpy(mac, command_line + i + 7, sizeof(mac));
+					break;
+				}
+			}
+			strlcpy(command_line, tdt_command_line, sizeof(command_line));
+			strlcat(command_line, mac, sizeof(command_line));
+		}
+	}
+
 	/* Save unparsed command line copy for /proc/cmdline */
 	memcpy(boot_command_line, command_line, COMMAND_LINE_SIZE);
 	*cmdline_p = command_line;
--- a/arch/sh/boards/mach-mb448/setup.c.orig
+++ b/arch/sh/boards/mach-mb448/setup.c
@@ -19,6 +19,7 @@
 #include <linux/mtd/physmap.h>
 #include <linux/stm/platform.h>
 #include <linux/stm/stx7100.h>
+#include <linux/bpa2.h>
 #include <asm/irl.h>
 
 
@@ -26,67 +27,196 @@
 #define MB448_PIO_SMC91X_RESET stm_gpio(2, 6)
 #define MB448_PIO_FLASH_VPP stm_gpio(2, 7)
 
+const char *LMI_VID_partalias[] = { "BPA2_Region1", "coredisplay-video", "gfx-memory", "v4l2-video-buffers", NULL };
+const char *bigphysarea_partalias[] = { "BPA2_Region0", "LMI_SYS", "v4l2-coded-video-buffers", NULL };
+
+/*
+0x10000000 - 0x103FFFFF - cocpu 1 ram (  4 Mb)
+0x10400000 - 0x107FFFFF - cocpu 2 ram (  4 Mb)
+0x10800000 - 0x14BFFFFF - Linux       ( 68 Mb)
+0x14C00000 - 0x17FFFFFF - LMI_VID     ( 52 Mb)
+0x18000000 - 0x1BFFFFFF - bigphys     ( 64 Mb)
+*/
+static struct bpa2_partition_desc bpa2_parts_table[] =
+{
+	{
+		.name  = "LMI_VID",
+		.start = 0x10800000,
+		.size  = 0x04000000,  // 64 MB
+		.flags = 0,
+		.aka   = LMI_VID_partalias
+	},
+	{
+		.name  = "bigphysarea",
+		.start = 0,
+		.size  = 0x01800000,  // 24 MB
+		.flags = 0,
+		.aka   = bigphysarea_partalias
+	}
+};
 
 
 void __init mb448_setup(char **cmdline_p)
 {
-	printk("STMicroelectronics STb7109E Reference board initialisation\n");
+	printk("Fortis HS9510 main board initialisation\n");
 
 	stx7100_early_device_init();
 
-	stx7100_configure_asc(2, &(struct stx7100_asc_config) {
-			.hw_flow_control = 0,
-			.is_console = 1, });
-	stx7100_configure_asc(3, &(struct stx7100_asc_config) {
-			.hw_flow_control = 0,
-			.is_console = 0, });
+	stx7100_configure_asc(2, &(struct stx7100_asc_config)
+	{
+		.hw_flow_control = 1,
+		.is_console = 1,
+	});
+	stx7100_configure_asc(3, &(struct stx7100_asc_config)
+	{
+		.hw_flow_control = 1,
+		.is_console = 0,
+	});
+	bpa2_init(bpa2_parts_table, ARRAY_SIZE(bpa2_parts_table));
 }
 
-
-
-static struct resource mb448_smc91x_resources[] = {
-	[0] = {
-		.start	= 0xa2000300,
-		.end	= 0xa2000300 + 0xff,
-		.flags	= IORESOURCE_MEM,
-	},
-	[1] = {
-		.start	= IRL3_IRQ,
-		.end	= IRL3_IRQ,
-		.flags	= IORESOURCE_IRQ,
-	},
-};
-
-static struct platform_device mb448_smc91x_device = {
-	.name		= "smc91x",
-	.id		= 0,
-	.num_resources	= ARRAY_SIZE(mb448_smc91x_resources),
-	.resource	= mb448_smc91x_resources,
-};
-
-
+static struct resource mb448_smc91x_resources[] =
+{
+	[0] =
+	{
+		.start  = 0xa2000300,
+		.end    = 0xa2000300 + 0xff,
+		.flags  = IORESOURCE_MEM,
+	},
+	[1] =
+	{
+		.start  = IRL3_IRQ,
+		.end    = IRL3_IRQ,
+		.flags  = IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device mb448_smc91x_device =
+{
+	.name          = "smc91x",
+	.id            = 0,
+	.num_resources = ARRAY_SIZE(mb448_smc91x_resources),
+	.resource      = mb448_smc91x_resources,
+};
 
 static void mb448_set_vpp(struct map_info *info, int enable)
 {
-	gpio_set_value(MB448_PIO_FLASH_VPP, enable);
+//	gpio_set_value(MB448_PIO_FLASH_VPP, enable);
 }
 
-static struct platform_device mb448_physmap_flash = {
+static struct mtd_partition mtd_parts_table[] =
+{
+// enable this part if you want to build a flash image for TDT maxiboot:
+#if 0
+	{
+		.name   = "Boot Firmware",
+		.size   = 0x00020000,   //u-boot 0x00000000-0x0001ffff  128k
+		.offset = 0x00000000,
+		mask_flags: 0
+	},
+	{
+		.name   = "Kernel",
+		.size   = 0x00200000,   //kernel 0x00040000-0x0023ffff 2MB
+		.offset = 0x00040000
+	},
+	{
+		.name   = "ROOT SQUASHFS",
+		.size   = 0x00a00000,   //root 0x00240000-0x00c3ffff 10,0MB
+		.offset = 0x00240000,
+	},
+	{
+		.name   = "VAR-JFFS2",
+		.size   = 0x013c0000,   //var 0x00c40000-0x1ffffff 19,75MB
+		.offset = 0x00c40000
+	},
+	{
+		.name   = "Boot Config",
+		.size   = 0x00020000,   //boot config 0x00020000-0x0003ffff  128k
+		.offset = 0x00020000
+ 	},
+ 	{
+		.name   = "Full without bootloader",
+		.size   = 0x01fc0000,
+		.offset = 0x00040000
+	}
+//};
+// set above to #if 0 if you want to build an image for original bootloader,
+// flashable with an .ird file
+#else
+	{
+		.name   = "Boot firmware",  // mtd0
+		.size   = 0x00300000,       // 3 MB
+		.offset = 0x00000000,       // 0 MB, flash type 0
+		mask_flags: 0
+	},
+	{
+		.name   = "Kernel",         // mtd1
+		.size   = 0x00300000,       // 3 MB
+		.offset = 0x00300000        // 3 MB, flash type 6
+	},
+	{
+		.name   = "APP_HI",         // mtd2
+		.size   = 0x00500000,       // 5 MB, squashfs
+		.offset = 0x00B00000        // 11 MB, flash type 1
+	},
+	{
+		.name   = "ROOT FS",        // mtd3
+		.size   = 0x00800000,       // 8 MB, squashfs
+		.offset = 0x01000000        // 16 MB, flash type 8
+	},
+ 	{
+		.name   = "Device",         // mtd4
+		.size   = 0x00300000,       // 3 MB squashfs
+		.offset = 0x01800000        // 24 MB, flash type 7
+	},
+	{
+		.name   = "Config",         // mtd5
+		.size   = 0x00100000,       // 1 MB
+		.offset = 0x01b00000        // 27 MB, flash types 2, 3, 4 & 5, last 256k not flashable
+	},
+	{
+		.name   = "User",           // mtd6
+		.size   = 0x00400000,       // 4 MB
+		.offset = 0x01c00000        // 28 MB, flash type 9
+	},
+	{
+		.name   = "APP_LO",        // mtd7
+		.size   = 0x00500000,      // 5 MB, squashfs, maintained by bootloader
+		.offset = 0x00600000       // 6 MB, not flashable
+	},
+	{
+		.name   = "All",            // mtd7
+		.size   = 0x02000000,       // 32 MB
+		.offset = 0x00000000        // 0 MB, not flashable as a whole
+	}
+#endif
+};
+
+static struct platform_device mb448_physmap_flash =
+{
 	.name		= "physmap-flash",
 	.id		= -1,
 	.num_resources	= 1,
-	.resource	= (struct resource[]) {
-		STM_PLAT_RESOURCE_MEM(0, 8*1024*1024),
-	},
-	.dev.platform_data = &(struct physmap_flash_data) {
+	.resource	= (struct resource[])
+	{
+		STM_PLAT_RESOURCE_MEM(0, 32 * 1024 * 1024),
+	},
+	.dev.platform_data = &(struct physmap_flash_data)
+	{
 		.width		= 2,
 		.set_vpp	= mb448_set_vpp,
-	},
-};
-
-
-
-#define STMMAC_PHY_ADDR 14
+		.nr_parts	= ARRAY_SIZE(mtd_parts_table),
+		.parts		= mtd_parts_table
+	},
+};
+
+#define STMMAC_PHY_ADDR 2
 static int stmmac_phy_irqs[PHY_MAX_ADDR] = {
 	[STMMAC_PHY_ADDR] = IRL0_IRQ,
 };
@@ -106,7 +222,7 @@
 	stx7100_configure_sata();
 
 	stx7100_configure_ssc_i2c(0, NULL);
-	stx7100_configure_ssc_spi(1, NULL);
+	stx7100_configure_ssc_i2c(1, NULL);
 	stx7100_configure_ssc_i2c(2, NULL);
 
 	stx7100_configure_usb();
@@ -119,6 +235,7 @@
 			.mdio_bus_data = &stmmac_mdio_bus,
 		});
 
+#if 0
 	gpio_request(MB448_PIO_FLASH_VPP, "Flash VPP");
 	gpio_direction_output(MB448_PIO_FLASH_VPP, 0);
 
@@ -129,9 +246,9 @@
 	gpio_set_value(MB448_PIO_SMC91X_RESET, 1);
 	udelay(1);
 	gpio_set_value(MB448_PIO_SMC91X_RESET, 0);
-
-	return platform_add_devices(mb448_devices,
-			ARRAY_SIZE(mb448_devices));
+#endif
+	return platform_add_devices(mb448_devices, ARRAY_SIZE(mb448_devices));
 }
 
 device_initcall(mb448_device_init);
+// vim:ts=4
--- a/drivers/stm/stx7100_comms.c.orig
+++ b/drivers/stm/stx7100_comms.c
@@ -240,12 +240,12 @@
 			STM_PAD_PIO_BIDIR_NAMED(3, 0, 1, "SCL"),
 			STM_PAD_PIO_BIDIR_NAMED(3, 1, 1, "SDA"),
 		},
-		.sysconfs_num = 2,
+		.sysconfs_num = 1,
 		.sysconfs = (struct stm_pad_sysconf []) {
 			/* SSC1_MUX_SEL = 0 (default assignment) */
 			STM_PAD_SYS_CFG(7, 2, 2, 0),
-			/* DVO_OUT_ON = 0 (SSC not DVO) */
-			STM_PAD_SYS_CFG(7, 10, 10, 0),
+			/* DVO_OUT_ON = 0 (SSC not DVO)
+			STM_PAD_SYS_CFG(7, 10, 10, 0),*/
 		},
 	},
 	[2] = {
