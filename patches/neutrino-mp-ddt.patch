--- neutrino-mp-ddt.org/acinclude.m4
+++ neutrino-mp-ddt/acinclude.m4
@@ -313,61 +313,13 @@
 AC_ARG_WITH(boxtype,
 	AS_HELP_STRING([--with-boxtype], [valid values: tripledragon, coolstream, spark, azbox, generic, armbox, duckbox, spark7162, mipsbox]),
 	[case "${withval}" in
-		tripledragon|coolstream|azbox|generic|armbox)
+		tripledragon|coolstream|azbox|generic|armbox|duckbox)
 			BOXTYPE="$withval"
 		;;
 		spark|spark7162)
 			BOXTYPE="spark"
 			BOXMODEL="$withval"
 		;;
-		dm*)
-			BOXTYPE="dreambox"
-			BOXMODEL="$withval"
-		;;
-		ufs*)
-			BOXTYPE="duckbox"
-			BOXMODEL="$withval"
-		;;
-		atevio*)
-			BOXTYPE="duckbox"
-			BOXMODEL="$withval"
-		;;
-		fortis*)
-			BOXTYPE="duckbox"
-			BOXMODEL="$withval"
-		;;
-		octagon*)
-			BOXTYPE="duckbox"
-			BOXMODEL="$withval"
-		;;
-		hs7*)
-			BOXTYPE="duckbox"
-			BOXMODEL="$withval"
-		;;
-		dp*)
-			BOXTYPE="duckbox"
-			BOXMODEL="$withval"
-		;;
-		cuberevo*)
-			BOXTYPE="duckbox"
-			BOXMODEL="$withval"
-		;;
-		ipbox*)
-			BOXTYPE="duckbox"
-			BOXMODEL="$withval"
-		;;
-		arivalink200)
-			BOXTYPE="duckbox"
-			BOXMODEL="$withval"
-		;;
-		tf*)
-			BOXTYPE="duckbox"
-			BOXMODEL="$withval"
-		;;
-		hl101)
-			BOXTYPE="duckbox"
-			BOXMODEL="$withval"
-		;;
 		hd51|hd60|vusolo4k|vuduo4k|vuultimo4k|vuzero4k|vuuno4kse|vuuno4k|h7)
 			BOXTYPE="armbox"
 			BOXMODEL="$withval"
@@ -384,8 +336,8 @@
 
 AC_ARG_WITH(boxmodel,
 	AS_HELP_STRING([--with-boxmodel], [valid for coolstream: hd1, hd2])
-AS_HELP_STRING([], [valid for duckbox: ufs910, ufs912, ufs913, ufs922, atevio7500, fortis_hdbox, octagon1008, hs7110, hs7810a, hs7119, hs7819, dp7000, cuberevo, cuberevo_mini, cuberevo_mini2, cuberevo_250hd, cuberevo_2000hd, cuberevo_3000hd, ipbox9900, ipbox99, ipbox55, arivalink200, tf7700, hl101])
 AS_HELP_STRING([], [valid for spark: spark, spark7162])
+AS_HELP_STRING([], [valid for duckbox: ufs910, ufs912, ufs913, ufs922, atevio7500, fortis_hdbox, octagon1008, hs7110, hs7420, hs7810a, hs7119, hs7429, hs7819, cuberevo, cuberevo_mini, cuberevo_mini2, cuberevo_250hd, cuberevo_2000hd, cuberevo_3000hd, ipbox9900, ipbox99, ipbox55, arivalink200, tf7700, hl101, adb_box, vitamin_hd5000])
 AS_HELP_STRING([], [valid for armbox: hd51, hd60, vusolo4k, vuduo4k, vuultimo4k, vuzero4k, vuuno4kse, vuuno4k, h7])
 AS_HELP_STRING([], [valid for mipsbox: vuduo])
 AS_HELP_STRING([], [valid for generic: raspi]),
@@ -409,7 +361,7 @@
 				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
 			fi
 		;;
-		ufs910|ufs912|ufs913|ufs922|atevio7500|fortis_hdbox|octagon1008|hs7110|hs7810a|hs7119|hs7819|dp7000|cuberevo|cuberevo_mini|cuberevo_mini2|cuberevo_250hd|cuberevo_2000hd|cuberevo_3000hd|ipbox9900|ipbox99|ipbox55|arivalink200|tf7700|hl101)
+		ufs910|ufs912|ufs913|ufs922|atevio7500|fortis_hdbox|octagon1008|hs7110|hs7420|hs7810a|hs7119|hs7429|hs7819|cuberevo|cuberevo_mini|cuberevo_mini2|cuberevo_250hd|cuberevo_2000hd|cuberevo_3000hd|ipbox9900|ipbox99|ipbox55|arivalink200|tf7700|hl101|adb_box|vitamin_hd5000)
 			if test "$BOXTYPE" = "duckbox"; then
 				BOXMODEL="$withval"
 			else
@@ -474,10 +426,11 @@
 AM_CONDITIONAL(BOXMODEL_FORTIS_HDBOX, test "$BOXMODEL" = "fortis_hdbox")
 AM_CONDITIONAL(BOXMODEL_OCTAGON1008, test "$BOXMODEL" = "octagon1008")
 AM_CONDITIONAL(BOXMODEL_HS7110, test "$BOXMODEL" = "hs7110")
+AM_CONDITIONAL(BOXMODEL_HS7420, test "$BOXMODEL" = "hs7420")
 AM_CONDITIONAL(BOXMODEL_HS7810A, test "$BOXMODEL" = "hs7810a")
 AM_CONDITIONAL(BOXMODEL_HS7119, test "$BOXMODEL" = "hs7119")
+AM_CONDITIONAL(BOXMODEL_HS7429, test "$BOXMODEL" = "hs7429")
 AM_CONDITIONAL(BOXMODEL_HS7819, test "$BOXMODEL" = "hs7819")
-AM_CONDITIONAL(BOXMODEL_DP7000, test "$BOXMODEL" = "dp7000")
 
 AM_CONDITIONAL(BOXMODEL_CUBEREVO, test "$BOXMODEL" = "cuberevo")
 AM_CONDITIONAL(BOXMODEL_CUBEREVO_MINI, test "$BOXMODEL" = "cuberevo_mini")
@@ -491,6 +444,8 @@
 AM_CONDITIONAL(BOXMODEL_ARIVALINK200, test "$BOXMODEL" = "arivalink200")
 AM_CONDITIONAL(BOXMODEL_TF7700, test "$BOXMODEL" = "tf7700")
 AM_CONDITIONAL(BOXMODEL_HL101, test "$BOXMODEL" = "hl101")
+AM_CONDITIONAL(BOXMODEL_ADB_BOX, test "$BOXMODEL" = "adb_box")
+AM_CONDITIONAL(BOXMODEL_VITAMIN_HD5000, test "$BOXMODEL" = "vitamin_hd5000")
 
 AM_CONDITIONAL(BOXMODEL_HD51, test "$BOXMODEL" = "hd51")
 AM_CONDITIONAL(BOXMODEL_HD60, test "$BOXMODEL" = "hd60")
@@ -583,6 +538,10 @@
 	AC_DEFINE(BOXMODEL_TF7700, 1, [tf7700])
 elif test "$BOXMODEL" = "hl101"; then
 	AC_DEFINE(BOXMODEL_HL101, 1, [hl101])
+elif test "$BOXMODEL" = "adb_box"; then
+	AC_DEFINE(BOXMODEL_ADB_BOX, 1, [adb_box])
+elif test "$BOXMODEL" = "vitamin_hd5000"; then
+	AC_DEFINE(BOXMODEL_VITAMIN_HD5000, 1, [vitamin_hd5000])
 elif test "$BOXMODEL" = "hd51"; then
 	AC_DEFINE(BOXMODEL_HD51, 1, [hd51])
 	AC_DEFINE(ENABLE_CHANGE_OSD_RESOLUTION, 1, [enable change the osd resolution])
--- neutrino-mp-ddt.org/src/driver/vfd.cpp
+++ neutrino-mp-ddt/src/driver/vfd.cpp
@@ -52,21 +52,40 @@
 #include <stropts.h>
 #define VFD_DEVICE "/dev/vfd"
 
-#if defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_TF7700)
+#if defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7429) \
+ || defined (BOXMODEL_TF7700)
 #define VFDLENGTH 8
-#elif defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
+#elif defined (BOXMODEL_FORTIS_HDBOX) \
+ ||   defined (BOXMODEL_ATEVIO7500) \
+ ||   defined (BOXMODEL_CUBEREVO)
 #define VFDLENGTH 12
-#elif defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7819) || defined (BOXMODEL_CUBEREVO_250HD) || defined (BOXMODEL_IPBOX55)
+#elif defined (BOXMODEL_HS7810A) \
+ ||   defined (BOXMODEL_HS7119) \
+ ||   defined (BOXMODEL_HS7819) \
+ ||   defined (BOXMODEL_CUBEREVO_250HD) \
+ ||   defined (BOXMODEL_CUBEREVO_MINI_FTA) \
+ ||   defined (BOXMODEL_IPBOX55)
 #define VFDLENGTH 4
 #elif defined (BOXMODEL_HS7110)
 #define VFDLENGTH 0
-#elif defined (BOXMODEL_IPBOX9900) || defined (BOXMODEL_IPBOX99)
+#elif defined (BOXMODEL_IPBOX9900) \
+ ||   defined (BOXMODEL_IPBOX99) \
+ ||   defined (BOXMODEL_CUBEREVO_MINI) \
+ ||   defined (BOXMODEL_CUBEREVO_MINI2) \
+ ||   defined (BOXMODEL_CUBEREVO_2000HD) \
+ ||   defined (BOXMODEL_CUBEREVO_3000HD)
 #define VFDLENGTH 14
+#elif defined (BOXMODEL_CUBEREVO_9500HD)
+#define VFDLENGTH 13
+#elif defined (BOXMODEL_ADB_BOX)
+#define VFDLENGTH 15
 #else
 #define VFDLENGTH 16
 #endif
 
-#define SCROLL_TIME 100000
+#define SCROLL_TIME 350000
 
 bool invert = false;
 char g_str[64];
@@ -83,6 +102,35 @@
 	unsigned char data[64];
 	unsigned char length;
 };
+
+#if defined (BOXMODEL_ADB_BOX)
+int adb_led = -1;
+
+int get_adb_variant()
+{
+	FILE *adb_file;
+	char adb_model[5] = { 0x00 };
+	int  ret;
+
+	adb_file = fopen("/proc/stb/info/adb_variant", "r");
+	if (adb_file != NULL)
+	{
+		fread(adb_model, 4, 1, adb_file);
+		printf("[CVFD] get_adb_variant: detected ADB model %s\n", adb_model);
+		if (strcmp(adb_model, "bska") == 0 || strcmp(adb_model, "bxzb") == 0)
+		{
+			printf("[CVFD] get_adb_variant: LED display assumed.\n");
+			ret = 1;
+		}
+		else
+		{
+			printf("[CVFD] get_adb_variant: VFD display assumed.\n");
+			ret = 0;
+		}
+	}
+	return ret;
+}
+#endif
 
 static void write_to_vfd(unsigned int DevType, struct vfd_ioctl_data * data, bool force = false)
 {
@@ -139,6 +187,17 @@
 
 static void ShowNormalText(char * str, bool fromScrollThread = false)
 {
+	int colon_at_2 = 0;
+	int disp_len = 0;
+
+#if defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7819)
+	if (str[2] == 0x3a)
+	{
+		colon_at_2++;
+	}
+#endif
 	if (blocked)
 	{
 		printf("[CVFD] - blocked\n");
@@ -158,32 +217,65 @@
 			vfd_scrollText = 0;
 		}
 	}
-	if ((strlen(str) > VFDLENGTH && !fromScrollThread) && (g_settings.lcd_vfd_scroll >= 1))
+	disp_len = (adb_led == 1 ? 4 : VFDLENGTH);
+#if defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7819)
+	if ((strlen(str) > disp_len + colon_at_2 && !fromScrollThread) && (g_settings.lcd_vfd_scroll >= 1))
+#else
+	if ((strlen(str) > disp_len && !fromScrollThread) && (g_settings.lcd_vfd_scroll >= 1))
+#endif
 	{
 		CVFD::getInstance()->ShowScrollText(str);
 		return;
 	}
-
-	if (strlen(str) < VFDLENGTH && VFDLENGTH > 7) // do not center on small displays
-		ws = (VFDLENGTH-strlen(str))/2;
+#if defined (BOXMODEL_CUBEREVO_MINI) \
+ || defined (BOXMODEL_CUBEREVO_MINI2) \
+ || defined (BOXMODEL_CUBEREVO_2000HD) \
+ || defined (BOXMODEL_CUBEREVO_3000HD) \
+ || defined (BOXMODEL_CUBEREVO_9500HD) \
+ || defined (BOXMODEL_CUBEREO) // CubeRevo's center in the display driver
+	ws = 0;
+#else
+	if (strlen(str) < disp_len + colon_at_2 && disp_len > 7) // do not center on small displays
+	{
+		ws = (disp_len - strlen(str)) / 2;
+	}
 	else
+	{
 		ws = 0;
+	}
+#endif
 	memset(data.data, ' ', 63);
 	if (!fromScrollThread)
 	{
-		memcpy (data.data+ws, str, VFDLENGTH-ws);
-		data.start = 0;
+#if defined (BOXMODEL_CUBEREVO_MINI) \
+ || defined (BOXMODEL_CUBEREVO_MINI2) \
+ || defined (BOXMODEL_CUBEREVO_2000HD) \
+ || defined (BOXMODEL_CUBEREVO_3000HD) \
+ || defined (BOXMODEL_CUBEREVO_9500HD) \
+ || defined (BOXMODEL_CUBEREVO) // CubeRevo's center in the display driver
+		memcpy(data.data, str, strlen(str));
+		data.length = strlen(str);
+#else
+		memcpy(data.data + ws, str, disp_len - ws + colon_at_2);
 		if ((strlen(str) % 2) == 1 && VFDLENGTH > 7) // do not center on small displays
-			data.length = VFDLENGTH-ws-1;
+		{
+			data.length = disp_len - ws - 1 + colon_at_2;
+		}
 		else
-			data.length = VFDLENGTH-ws;
+		{
+			data.length = disp_len - ws + colon_at_2;
+		}
+#endif
 	}
 	else
 	{
-		memcpy ( data.data, str, VFDLENGTH);
-		data.start = 0;
-		data.length = VFDLENGTH;
-	}
+		memcpy(data.data, str, disp_len + colon_at_2);
+		data.length = disp_len + colon_at_2;
+	}
+	data.start = 0;
+//	printf("CVFD::ShowNormalText: [%s]\n", str);
 	write_to_vfd(VFDDISPLAYCHARS, &data);
 	return;
 }
@@ -219,17 +311,18 @@
 	int i;
 	char *str = (char *)arg;
 	int len = strlen(str);
-	char out[VFDLENGTH+1];
-	char buf[VFDLENGTH+65];
-
-	memset(out, 0, VFDLENGTH+1);
+	char out[17];
+	char buf[81];
+	int disp_len = adb_led == 1 ? 4 : VFDLENGTH;
+
+	memset(out, 0, disp_len + 1);
 
 	int retries = g_settings.lcd_vfd_scroll;
 
-	if (len > VFDLENGTH)
+	if (len > disp_len)
 	{
 		printf("CVFD::ThreadScrollText: [%s], length %d\n", str, len);
-		memset(buf, ' ', (len + VFDLENGTH));
+		memset(buf, ' ', (len + disp_len));
 		memcpy(buf, str, len);
 
 		while(retries--)
@@ -239,20 +332,20 @@
 			for (i = 0; i <= (len-1); i++)
 			{
 				// scroll text until end
-				memcpy(out, buf+i, VFDLENGTH);
+				memcpy(out, buf + i, disp_len);
 				ShowNormalText(out,true);
 				usleep(SCROLL_TIME);
 			}
 		}
 	}
-	memcpy(out, str, VFDLENGTH); // display first VFDLENGTH chars after scrolling
+	memcpy(out, str, disp_len); // display first VFDLENGTH chars after scrolling
 	ShowNormalText(out,true);
 
 	pthread_exit(0);
 
 	return NULL;
 }
-#endif
+#endif // HAVE_DUCKBOX_HARDWARE
 
 CVFD::CVFD()
 {
@@ -402,6 +495,9 @@
 
 void CVFD::init(const char * /*fontfile*/, const char * /*fontname*/)
 {
+#if defined (BOXMODEL_ADB_BOX)
+	adb_led = get_adb_variant();
+#endif		
 	//InitNewClock(); /FIXME
 
 	brightness = -1;
@@ -430,7 +526,7 @@
 
 	brightness = dimm;
 
-printf("CVFD::setlcdparameter dimm %d power %d\n", dimm, power);
+	printf("CVFD::setlcdparameter dimm %d power %d\n", dimm, power);
 #if !HAVE_DUCKBOX_HARDWARE
 	int ret = ioctl(fd, IOC_FP_SET_BRIGHT, dimm);
 	if(ret < 0)
@@ -438,51 +534,87 @@
 #else
 // Brightness
 	struct vfd_ioctl_data data;
-#if !defined (BOXMODEL_HS7810A) && !defined (BOXMODEL_HS7119) && !defined (BOXMODEL_HS7819)
+#if !defined (BOXMODEL_HS7810A) \
+ && !defined (BOXMODEL_HS7119) \
+ && !defined (BOXMODEL_HS7819)
 	memset(&data, 0, sizeof(struct vfd_ioctl_data));
 	data.start = brightness & 0x07;
 	data.length = 0;
 	write_to_vfd(VFDBRIGHTNESS, &data);
 #endif
-#if defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
+#if defined (BOXMODEL_FORTIS_HDBOX) \
+ || defined (BOXMODEL_ATEVIO7500)
 	usleep(100000);
 	memset(&data, 0, sizeof(struct vfd_ioctl_data));
-	data.start = 0;
+	data.data[0] = 0;
 	data.length = 5;
 	if (power) {
-		data.data[0] = 0x01; // red led
+		data.start = 0x01; // red led
 	}
 	else
 	{
-		data.data[0] = 0xf2; // cross plus blue led
-	}
-	data.start = 0;
+		data.start = 0xf2; // cross plus blue led
+	}
 	data.data[4] = 0; // off
 	data.length = 5;
-	write_to_vfd(VFDPWRLED, &data);
+	write_to_vfd(VFDSETLED, &data);
 	usleep(100000);
 	memset(&data, 0, sizeof(struct vfd_ioctl_data));
-	data.start = 0;
+	data.data[0] = 0;
 	data.length = 5;
 	if (power) {
-		data.data[0] = 0xf2; // cross plus blue led
+		data.start = 0xf2; // cross plus blue led
 	}
 	else
 	{
-		data.data[0] = 0x01; // red led
+		data.start = 0x01; // red led
 	}
 	data.start = 0;
 	data.data[4] = brightness*2;
 	data.length = 5;
-	write_to_vfd(VFDPWRLED, &data);
-#elif defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7819)
+	write_to_vfd(VFDSETLED, &data);
+#elif defined (BOXMODEL_HS7420) \
+ ||   defined (BOXMODEL_HS7810A) \
+ ||   defined (BOXMODEL_HS7429) \
+ ||   defined (BOXMODEL_HS7819)
+// TODO: FIX all models
 	memset(&data, 0, sizeof(struct vfd_ioctl_data));
 	data.start = 0;
 	data.data[0] = 0x02; // logo
 	data.data[4] = (brightness & 0x07);
 	data.length = 5;
-	write_to_vfd(VFDPWRLED, &data);
-#elif !defined (BOXMODEL_UFS912) && !defined (BOXMODEL_UFS913) && !defined (BOXMODEL_OCTAGON1008)
+	write_to_vfd(VFDSETLED, &data);
+// TODO: Octagon1008
+#elif defined (BOXMODEL_ADB_BOX)
+	memset(&data, 0, sizeof(struct vfd_ioctl_data));
+	data.start = brightness & 0x07;
+	data.length = 0;
+	if (adb_led == 1)
+	{
+		write_to_vfd(VFDLEDBRIGHTNESS, &data);
+	}
+	else
+	{
+		write_to_vfd(VFDBRIGHTNESS, &data);
+	}
+//	memset(&data, 0, sizeof(struct vfd_ioctl_data));
+//	data.start = 0x01; // power LED
+//	data.data[0] = 0;
+//	data.data[1] = 0;
+//	data.data[4] = 0;
+//	data.length = 5;
+//	if (power)
+//	{
+//		data.data[3] = 1;  // green
+//	}
+//	else
+//	{
+//		data.data[3] = 2;  // red
+//	}
+//	write_to_vfd(VFDSETLED, &data);
+#elif !defined (BOXMODEL_UFS912) \
+ &&   !defined (BOXMODEL_UFS913) \
+ &&   !defined (BOXMODEL_OCTAGON1008)
 // Power on/off
 	if (power) {
 		data.start = 0x01;
@@ -536,6 +668,10 @@
 		return;
 
 	int led1 = -1, led2 = -1;
+#if defined(BOXMODEL_ADB_BOX)
+	int led3 = -1, led4 = -1;
+#endif
+
 	if(on_off){//on
 		switch(g_settings.led_rec_mode) {
 			case 1:
@@ -576,6 +712,9 @@
 	if(fd < 0) return;
 
 	int led1 = -1, led2 = -1;
+#if defined(BOXMODEL_ADB_BOX)
+	int led3 = -1, led4 = -1;
+#endif
 	int select = 0;
 
 	if(mode == MODE_MENU_UTF8 || mode == MODE_TVRADIO  )
@@ -603,21 +742,34 @@
 }
 #endif
 
-void CVFD::showServicename(const std::string & name, int number) // UTF-8
-{
-	if(fd < 0) return;
-
-printf("CVFD::showServicename: %s\n", name.c_str());
+void CVFD::showServicename(const std::string &name, int number) // UTF-8
+{
+	int disp_len = (adb_led == 1 ? 4 : VFDLENGTH);
+
+	if (fd < 0)
+	{
+		return;
+	}
+//	printf("CVFD::showServicename: [%s] (len = %d\n", name.c_str(), strlen(name.c_str()));
 	servicename = name;
 	service_number = number;
 
 	if (mode != MODE_TVRADIO)
-		return;
-
-	if (support_text)
+	{
+		return;
+	}
+	if (strlen(name.c_str()) < 1)
+	{
+		return;
+	}
+	if ((support_text) && disp_len > 7)
+	{
 		ShowText(name.c_str());
+	}
 	else
+	{
 		ShowNumber(service_number);
+	}
 	wake_up();
 }
 
@@ -625,79 +777,117 @@
 {
 	//unsigned int system_rev = cs_get_revision();
 	static int recstatus = 0;
+
 #if 0
 	if(!has_lcd)
 		return;
 #endif
-	if(fd >= 0 && mode == MODE_SHUTDOWN) {
+	if (fd >= 0 && mode == MODE_SHUTDOWN)
+	{
 		ShowIcon(FP_ICON_CAM1, false);
 		return;
 	}
-	if (fd >= 0 && showclock) {
+	if (fd >= 0 && showclock)
+	{
 		if (mode == MODE_STANDBY || ( g_settings.lcd_info_line && (MODE_TVRADIO == mode))) {
 			char timestr[21];
 			struct timeb tm;
 			struct tm * t;
-			static int hour = 0, minute = 0;
+			static int hour = 0, minute = 0, second = 0;
 
 			ftime(&tm);
 			t = localtime(&tm.time);
-			if(force || ( switch_name_time_cnt == 0 && ((hour != t->tm_hour) || (minute != t->tm_min))) ) {
+			if (force || (switch_name_time_cnt == 0 && ((hour != t->tm_hour) || (minute != t->tm_min) || (second != t->tm_sec))))
+			{
 				hour = t->tm_hour;
 				minute = t->tm_min;
-#if !defined (BOXMODEL_HS7810A) && !defined (BOXMODEL_HS7819)
+				second = t->tm_sec;
 #if defined (BOXMODEL_OCTAGON1008)
-				ShowIcon(ICON_COLON2, true);
-#elif defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_CUBEREVO_250HD)
+
+				ShowIcon(ICON_COLON2, second % 2 == 0 ? true : false);
 				strftime(timestr, 5, "%H%M", t);
+				ShowText(timestr);
+#elif defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7429)
+
+				ShowIcon(ICON_COLON2, second % 2 == 0 ? true : false);
+				strftime(timestr, 5, "%H%M", t);
+				ShowText(timestr);
+#elif defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7819)
+
+				strftime(timestr, 5, "%H%M", t);
+				ShowText(timestr);
+				ShowIcon(ICON_COLON, second % 2 == 0 ? true : false);
+#elif defined (BOXMODEL_FORTIS_HDBOX)
+				ShowIcon(ICON_COLON3, second % 2 == 0 ? true : false);
+				strftime(timestr, 13, "        %H%M", t);
+				ShowText(timestr);
+#elif defined (BOXMODEL_ADB_BOX)
+				if (adb_led == 1)
+				{
+					strftime(timestr, 5, "%H%M", t);
+				}
+				else
+				{
+					strftime(timestr, 6, (second % 2 == 0 ? "%H:%M" : "%H %M"), t);
+				}
+				ShowText(timestr);
+#elif defined (BOXMODEL_CUBEREVO_250HD)
+				strftime(timestr, 5, "%H%M", t);
+				ShowText(timestr);
 #else
-				strftime(timestr, 6, "%H:%M", t);
-#endif
-				ShowText(timestr);
-#else //HS7810A or HS7819, string should not scroll
-				strftime(timestr, 6, "%H:%M", t);
-				struct vfd_ioctl_data data;
-				memset(data.data, ' ', 6);
-				memcpy (data.data, timestr, 6);
-				data.start = 0;
-				data.length = 5;
-				write_to_vfd(VFDDISPLAYCHARS, &data);
-#endif
-				if (support_text) {
+				if (support_text)
+				{
 					strftime(timestr, 20, "%H:%M", t);
 					ShowText(timestr);
-				} else if (support_numbers && has_led_segment) {
+				}
+				else if (support_numbers && has_led_segment)
+				{
 					ShowNumber((t->tm_hour*100) + t->tm_min);
 #ifdef BOXMODEL_CS_HD2
 					ioctl(fd, IOC_FP_SET_COLON, 0x01);
 #endif
 				}
+#endif
 			}
 		}
 	}
 
 	int tmp_recstatus = CNeutrinoApp::getInstance()->recordingstatus;
-	if (tmp_recstatus) {
-		if(clearClock) {
+	if (tmp_recstatus)
+	{
+		if (clearClock)
+		{
 			clearClock = 0;
-			if(has_lcd)
+			if (has_lcd)
+			{
 				ShowIcon(FP_ICON_CAM1, false);
+			}
 #if !HAVE_DUCKBOX_HARDWARE
 			setled(false);//off
 #endif
-		} else {
+		}
+		else
+		{
 			clearClock = 1;
 			if(has_lcd)
+			{
 				ShowIcon(FP_ICON_CAM1, true);
+			}
 #if !HAVE_DUCKBOX_HARDWARE
 			setled(true);//on
 #endif
 		}
-	} else if(clearClock || (recstatus != tmp_recstatus)) { // in case icon ON after record stopped
+	}
+	else if (clearClock || (recstatus != tmp_recstatus))
+	{ // in case icon ON after record stopped
 		clearClock = 0;
-		if(has_lcd)
+		if (has_lcd)
+		{
 			ShowIcon(FP_ICON_CAM1, false);
-
+		}
 #if !HAVE_DUCKBOX_HARDWARE
 		setled();
 #endif
@@ -715,7 +905,10 @@
 		ShowIcon(FP_ICON_HD,chan->isHD());
 		ShowIcon(FP_ICON_LOCK,!chan->camap.empty());
 		if (chan->getAudioChannel() != NULL)
+		{
+
 			ShowIcon(FP_ICON_DD, chan->getAudioChannel()->audioChannelType == CZapitAudioChannel::AC3);
+		}
 	}
 }
 #endif
@@ -755,7 +948,8 @@
 		int pp = (int) round((double) vol / (double) 2);
 		if(oldpp != pp)
 		{
-#if defined (BOXMODEL_UFS910) || defined (BOXMODEL_UFS922)
+#if defined (BOXMODEL_UFS910) \
+ || defined (BOXMODEL_UFS922)
 			int i;
 			unsigned char speaker[5] = {0x1C, 0x1C, 0x1C, 0x3E, 0x7F}; // speaker symbol
 			writeCG(0, speaker);
@@ -802,15 +996,44 @@
 			char vol_chr[64] = "";
 			snprintf(vol_chr, sizeof(vol_chr)-1, "VOL: %d%%", (int)vol);
 			ShowText(vol_chr);
-#elif defined (BOXMODEL_OCTAGON1008)
+#elif defined (BOXMODEL_OCTAGON1008) \
+ ||   defined (BOXMODEL_HS7420) \
+ ||   defined (BOXMODEL_HS7429)
 			char vol_chr[64] = "";
-			snprintf(vol_chr, sizeof(vol_chr)-1, "VOL=%3d", (int)vol);
+			snprintf(vol_chr, sizeof(vol_chr)-1, "VOL=%3d%%", (int)vol);
 			ShowText(vol_chr);
-#elif defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7819) || defined (BOXMODEL_CUBEREVO_250HD) || defined (BOXMODEL_IPBOX55)
+#elif defined (BOXMODEL_HS7119) \
+ ||   defined (BOXMODEL_HS7810A) \
+ ||   defined (BOXMODEL_HS7819) \
+ ||   defined (BOXMODEL_CUBEREVO_250HD) \
+ ||   defined (BOXMODEL_IPBOX55)
 			char vol_chr[64] = "";
+
 			snprintf(vol_chr, sizeof(vol_chr)-1, "v%3d", (int)vol);
 			ShowText(vol_chr);
-#elif defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500) || defined (BOXMODEL_UFS912) || defined (BOXMODEL_UFS913) || defined (BOXMODEL_CUBEREVO) || defined (BOXMODEL_CUBEREVO_MINI) || defined (BOXMODEL_CUBEREVO_MINI2) || defined (BOXMODEL_CUBEREVO_2000HD) || defined (BOXMODEL_CUBEREVO_3000HD) || defined (BOXMODEL_IPBOX9900) || defined (BOXMODEL_IPBOX99)
+#elif defined (BOXMODEL_ADB_BOX)
+			char vol_chr[64] = "";
+
+			if (adb_led == 1)
+			{
+				snprintf(vol_chr, sizeof(vol_chr) - 1, "v%3d", (int)vol);
+			}
+			else
+			{
+				snprintf(vol_chr, sizeof(vol_chr) - 1, "Volume: %d%%", (int)vol);
+			}
+			ShowText(vol_chr);
+#elif defined (BOXMODEL_FORTIS_HDBOX) \
+ ||   defined (BOXMODEL_ATEVIO7500) \
+ ||   defined (BOXMODEL_UFS912) \
+ ||   defined (BOXMODEL_UFS913) \
+ ||   defined (BOXMODEL_CUBEREVO) \
+ ||   defined (BOXMODEL_CUBEREVO_MINI) \
+ ||   defined (BOXMODEL_CUBEREVO_MINI2) \
+ ||   defined (BOXMODEL_CUBEREVO_2000HD) \
+ ||   defined (BOXMODEL_CUBEREVO_3000HD) \
+ ||   defined (BOXMODEL_IPBOX9900) \
+ ||   defined (BOXMODEL_IPBOX99)
 			char vol_chr[64] = "";
 			snprintf(vol_chr, sizeof(vol_chr)-1, "Volume: %d%%", (int)vol);
 			ShowText(vol_chr);
@@ -820,17 +1043,23 @@
 #else
 		ShowIcon(FP_ICON_FRAME, true);
 		int pp = (int) round((double) vol * (double) 8 / (double) 100);
-		if(pp > 8) pp = 8;
-
-		if(force_update || oldpp != pp) {
-printf("CVFD::showVolume: %d, bar %d\n", (int) vol, pp);
+		if (pp > 8)
+		{
+			pp = 8;
+		}
+		if (force_update || oldpp != pp)
+		{
 			int i;
 			int j = 0x00000200;
-			for(i = 0; i < pp; i++) {
+
+			printf("CVFD::showVolume: %d, bar %d\n", (int) vol, pp);
+			for (i = 0; i < pp; i++)
+			{
 				ShowIcon((fp_icon) j, true);
 				j /= 2;
 			}
-			for(;i < 8; i++) {
+			for (;i < 8; i++)
+			{
 				ShowIcon((fp_icon) j, false);
 				j /= 2;
 			}
@@ -868,7 +1097,7 @@
 		if(pp > 8) pp = 8;
 
 		if(pp != ppold) {
-//printf("CVFD::showPercentOver: %d, bar %d\n", (int) perc, pp);
+			//printf("CVFD::showPercentOver: %d, bar %d\n", (int) perc, pp);
 			int i;
 			int j = 0x00000200;
 			for(i = 0; i < pp; i++) {
@@ -900,7 +1129,7 @@
 	if(fd < 0) return;
 	if (mode != MODE_AUDIO)
 		return;
-printf("CVFD::showAudioTrack: %s\n", title.c_str());
+	printf("CVFD::showAudioTrack: %s\n", title.c_str());
 	ShowText(title.c_str());
 	wake_up();
 
@@ -969,16 +1198,24 @@
 
 void CVFD::setMode(const MODES m, const char * const title)
 {
-	if(fd < 0) return;
-
+#if defined (BOXMODEL_ADB_BOX)
+	struct vfd_ioctl_data data;
+
+#endif
+	if(fd < 0)
+	{
+		return;
+	}
 	// Clear colon in display if it is still there
 #ifdef BOXMODEL_CS_HD2
 	if (support_numbers && has_led_segment)
 		ioctl(fd, IOC_FP_SET_COLON, 0x00);
 #endif
 
-	if(mode == MODE_AUDIO)
+	if (mode == MODE_AUDIO)
+	{
 		ShowIcon(FP_ICON_MP3, false);
+	}
 #if 0
 	else if(mode == MODE_STANDBY) {
 		ShowIcon(FP_ICON_COL1, false);
@@ -986,6 +1223,38 @@
 	}
 #endif
 
+#if defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7429)
+	else if (mode == MODE_STANDBY)
+	{
+		ShowIcon(ICON_COLON2, true);
+	}
+#elif defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7819)
+	else if (mode == MODE_STANDBY)
+	{
+		ShowIcon(ICON_COLON, true);
+	}
+#elif defined (BOXMODEL_FORTIS_HDBOX)
+	else if (mode == MODE_STANDBY)
+	{
+		ShowIcon(ICON_COLON3, true);
+	}
+#elif defined (BOXMODEL_ADB_BOX)
+	else if (mode == MODE_STANDBY)
+	{
+		memset(&data, 0, sizeof(struct vfd_ioctl_data));
+		data.start = 0x01; // power LED
+		data.data[0] = 0;
+		data.data[1] = 0;
+		data.data[3] = 2;  // red
+		data.data[4] = 0;
+		data.length = 5;
+		write_to_vfd(VFDSETLED, &data);
+	}
+#endif
 	if(strlen(title))
 		ShowText(title);
 	mode = m;
@@ -1007,6 +1276,10 @@
 			showPercentOver(percentOver, false);
 			break;
 #endif
+		}
+		if (servicename.size() < 1)
+		{
+			servicename = "                ";
 		}
 		showServicename(servicename);
 		showclock = true;
@@ -1088,12 +1361,28 @@
 int CVFD::getBrightness()
 {
 	//FIXME for old neutrino.conf
-#if defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
-	if(g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS] > 7)
+#if defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_FORTIS_HDBOX) \
+ || defined (BOXMODEL_ATEVIO7500) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7429) \
+ || defined (BOXMODEL_CUBEREVO) \
+ || defined (BOXMODEL_CUBEREVO_MINI) \
+ || defined (BOXMODEL_CUBEREVO_MINI2) \
+ || defined (BOXMODEL_CUBEREVO_2000HD) \
+ || defined (BOXMODEL_CUBEREVO_3000HD) \
+ || defined (BOXMODEL_IPBOX9900) \
+ || defined (BOXMODEL_IPBOX99) \
+ || defined (BOXMODEL_ADB_BOX)
+	if (g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS] > 7)
+	{
 		g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS] = 7;
+	}
 #else
-	if(g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS] > 15)
+	if (g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS] > 15)
+	{
 		g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS] = 15;
+	}
 #endif
 
 	return g_settings.lcd_setting[SNeutrinoSettings::LCD_BRIGHTNESS];
@@ -1110,12 +1399,28 @@
 int CVFD::getBrightnessStandby()
 {
 	//FIXME for old neutrino.conf
-#if defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
-	if(g_settings.lcd_setting[SNeutrinoSettings::LCD_STANDBY_BRIGHTNESS] > 7)
+#if defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_FORTIS_HDBOX) \
+ || defined (BOXMODEL_ATEVIO7500) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7429) \
+ || defined (BOXMODEL_CUBEREVO) \
+ || defined (BOXMODEL_CUBEREVO_MINI) \
+ || defined (BOXMODEL_CUBEREVO_MINI2) \
+ || defined (BOXMODEL_CUBEREVO_2000HD) \
+ || defined (BOXMODEL_CUBEREVO_3000HD) \
+ || defined (BOXMODEL_IPBOX9900) \
+ || defined (BOXMODEL_IPBOX99) \
+ || defined (BOXMODEL_ADB_BOX)
+	if (g_settings.lcd_setting[SNeutrinoSettings::LCD_STANDBY_BRIGHTNESS] > 7)
+	{
 		g_settings.lcd_setting[SNeutrinoSettings::LCD_STANDBY_BRIGHTNESS] = 7;
+	}
 #else
-	if(g_settings.lcd_setting[SNeutrinoSettings::LCD_STANDBY_BRIGHTNESS] > 15)
+	if (g_settings.lcd_setting[SNeutrinoSettings::LCD_STANDBY_BRIGHTNESS] > 15)
+	{
 		g_settings.lcd_setting[SNeutrinoSettings::LCD_STANDBY_BRIGHTNESS] = 15;
+	}
 #endif
 	return g_settings.lcd_setting[SNeutrinoSettings::LCD_STANDBY_BRIGHTNESS];
 }
@@ -1131,12 +1436,28 @@
 int CVFD::getBrightnessDeepStandby()
 {
 	//FIXME for old neutrino.conf
-#if defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
-	if(g_settings.lcd_setting[SNeutrinoSettings::LCD_DEEPSTANDBY_BRIGHTNESS] > 7)
+#if defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_FORTIS_HDBOX) \
+ || defined (BOXMODEL_ATEVIO7500) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7429) \
+ || defined (BOXMODEL_CUBEREVO) \
+ || defined (BOXMODEL_CUBEREVO_MINI) \
+ || defined (BOXMODEL_CUBEREVO_MINI2) \
+ || defined (BOXMODEL_CUBEREVO_2000HD) \
+ || defined (BOXMODEL_CUBEREVO_3000HD) \
+ || defined (BOXMODEL_IPBOX9900) \
+ || defined (BOXMODEL_IPBOX99) \
+ || defined (BOXMODEL_ADB_BOX)
+	if (g_settings.lcd_setting[SNeutrinoSettings::LCD_DEEPSTANDBY_BRIGHTNESS] > 7)
+	{
 		g_settings.lcd_setting[SNeutrinoSettings::LCD_DEEPSTANDBY_BRIGHTNESS] = 7;
+	}
 #else
-	if(g_settings.lcd_setting[SNeutrinoSettings::LCD_DEEPSTANDBY_BRIGHTNESS] > 15)
+	if (g_settings.lcd_setting[SNeutrinoSettings::LCD_DEEPSTANDBY_BRIGHTNESS] > 15)
+	{
 		g_settings.lcd_setting[SNeutrinoSettings::LCD_DEEPSTANDBY_BRIGHTNESS] = 15;
+	}
 #endif
 	return g_settings.lcd_setting[SNeutrinoSettings::LCD_DEEPSTANDBY_BRIGHTNESS];
 }
@@ -1202,14 +1523,30 @@
 	else
 		text.clear();
 #else
-#if defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7819) || defined (BOXMODEL_CUBEREVO_250HD) || defined (BOXMODEL_IPBOX55)
+#if defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7819) \
+ || defined (BOXMODEL_CUBEREVO_250HD) \
+ || defined (BOXMODEL_IPBOX55)
 	ShowText("    ");
-#elif defined (BOXMODEL_OCTAGON1008) || defined (BOXMODEL_TF7700)
+#elif defined (BOXMODEL_OCTAGON1008) \
+ || defined (BOXMODEL_TF7700) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7429)
 	ShowText("        ");
-#elif defined (BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_ATEVIO7500)
+#elif defined (BOXMODEL_FORTIS_HDBOX) \
+ || defined (BOXMODEL_ATEVIO7500)
 	ShowText("            ");
-#elif defined (BOXMODEL_IPBOX9900) || defined (BOXMODEL_IPBOX99)
+#elif defined (BOXMODEL_CUBEREVO) \
+ ||   defined (BOXMODEL_CUBEREVO_MINI) \
+ ||   defined (BOXMODEL_CUBEREVO_MINI2) \
+ ||   defined (BOXMODEL_CUBEREVO_2000HD) \
+ ||   defined (BOXMODEL_CUBEREVO_3000HD) \
+ ||   defined (BOXMODEL_IPBOX9900) \
+ ||   defined (BOXMODEL_IPBOX99)
 	ShowText("              ");
+#elif defined (BOXMODEL_ADB_BOX)
+	ShowText("               ");
 #elif !defined (BOXMODEL_HS7110)
 	ShowText("                ");
 #endif
@@ -1219,25 +1556,69 @@
 void CVFD::ShowIcon(fp_icon icon, bool show)
 {
 #if !HAVE_DUCKBOX_HARDWARE
-	if(!has_lcd || fd < 0) return;
-//printf("CVFD::ShowIcon %s %x\n", show ? "show" : "hide", (int) icon);
+	if (!has_lcd || fd < 0)
+	{
+		return;
+	}
+//	printf("CVFD::ShowIcon %s %x\n", show ? "show" : "hide", (int) icon);
+
 	int ret = ioctl(fd, show ? IOC_FP_SET_ICON : IOC_FP_CLEAR_ICON, icon);
 	if(ret < 0)
+	{
 		perror(show ? "IOC_FP_SET_ICON" : "IOC_FP_CLEAR_ICON");
+	}
 #else
-#if defined (BOXMODEL_ATEVIO7500) || defined (BOXMODEL_HS7110) || defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7819)
+  #if defined (BOXMODEL_HS7110) \
+   || defined (BOXMODEL_HS7420) \
+   || defined (BOXMODEL_HS7810A) \
+   || defined (BOXMODEL_HS7119) \
+   || defined (BOXMODEL_HS7429) \
+   || defined (BOXMODEL_HS7819) \
+   || defined (BOXMODEL_CUBEREVO_MINI_FTA) \
+   || defined (BOXMODEL_CUBEREVO_250HD) \
+   || defined (BOXMODEL_IPBOX55)
 	return;
-#endif
+  #endif
 	if (icon == 0)
-		return;
-
+	{
+		return;
+	}
+  #if !defined (BOXMODEL_OCTAGON1008) \
+   && !defined (BOXMODEL_FORTIS_HDBOX) \
+   && !defined (BOXMODEL_ATEVIO7500) \
+   && !defined (BOXMODEL_HS7420) \
+   && !defined (BOXMODEL_HS7810A) \
+   && !defined (BOXMODEL_HS7420) \
+   && !defined (BOXMODEL_HS7119) \
+   && !defined (BOXMODEL_HS7429) \
+   && !defined (BOXMODEL_HS7819) \
+   && !defined (BOXMODEL_ADB_BOX)
 	if (active_icon[icon & 0x0F] == show)
-		return;
+	{
+		return;
+	}
 	else
+	{
 		active_icon[icon & 0x0F] = show;
-
+	}
+  #endif
 	//printf("CVFD::ShowIcon %s %x\n", show ? "show" : "hide", (int) icon);
+
 	struct vfd_ioctl_data data;
+
+  #if defined (BOXMODEL_ADB_BOX)
+	if ((adb_led == 1 && icon == FP_ICON_CLOCK) || (adb_led == 0 && icon == FP_ICON_REC))
+	{
+		memset(&data, 0, sizeof(struct vfd_ioctl_data));
+		data.start = 0x02;  // timer/REC LED
+		data.data[0] = 0;
+		data.data[1] = 0;
+		data.data[3] = show;
+		data.data[4] = 0;
+		data.length = 5;
+		write_to_vfd(VFDSETLED, &data);
+	}  // and fall through to
+  #endif
 	memset(&data, 0, sizeof(struct vfd_ioctl_data));
 	data.start = 0x00;
 	data.data[0] = icon;
@@ -1251,10 +1632,20 @@
 #ifdef HAVE_DUCKBOX_HARDWARE
 void CVFD::ClearIcons()
 {
-#if defined (BOXMODEL_ATEVIO7500) || defined (BOXMODEL_HS7110) || defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7819)
+#if defined (BOXMODEL_HS7110) \
+ || defined (BOXMODEL_HS7420) \
+ || defined (BOXMODEL_HS7810A) \
+ || defined (BOXMODEL_HS7119) \
+ || defined (BOXMODEL_HS7429) \
+ || defined (BOXMODEL_HS7819) \
+ || defined (BOXMODEL_CUBEREVO_MINI_FTA) \
+ || defined (BOXMODEL_CUBEREVO_250HD) \
+ || defined (BOXMODEL_IPBOX55)
 	return;
 #endif
-	for (int id = 0x10; id < FP_ICON_MAX; id++) {
+//	printf("CVFD::ClearIcons, min=%02d, max=%02d\n", FP_ICON_MIN, FP_ICON_MAX);
+	for (int id = 1; id < FP_ICON_MAX; id++)
+	{
 #if defined (BOXMODEL_OCTAGON1008)
 		if (id != FP_ICON_USB && id != FP_ICON_HDD)
 #elif defined(BOXMODEL_FORTIS_HDBOX) || defined (BOXMODEL_TF7700)
@@ -1262,18 +1653,26 @@
 #else
 		if (id != 0x10 && id != 0x12)
 #endif
+		{
 			ShowIcon((fp_icon)id, false);
+		}
 	}
 	return;
 }
 
 void CVFD::ShowText(const char * str)
 {
+	if (! str)
+	{
+		printf("CVFD::ShowText: str is NULL!\n");
+		return;
+	}
 	memset(g_str, 0, sizeof(g_str));
 	memcpy(g_str, str, sizeof(g_str)-1);
 
 	int i = strlen(str);
-	if (i > 63) {
+	if (i > 63)
+	{
 		g_str[60] = '.';
 		g_str[61] = '.';
 		g_str[62] = '.';
@@ -1282,14 +1681,15 @@
 	}
 	ShowNormalText(g_str, false);
 }
+
 void CVFD::repaintIcons()
 {
 	char * model = g_info.hw_caps->boxname;
-	if(strstr(model, "ufs912") || strstr(model, "ufs913"))
+	if (strstr(model, "ufs912") || strstr(model, "ufs913"))
 	{
 		bool tmp_icon[16] = {false};
 		printf("VFD repaint icons boxmodel: %s\n", model);
-		for (int i = 0x10; i < FP_ICON_MAX; i++)
+		for (int i = FP_ICON_MIN; i < FP_ICON_MAX; i++)
 		{
 			tmp_icon[i & 0x0F] = active_icon[i & 0x0F];
 			active_icon[i & 0x0F] = false;
@@ -1297,7 +1697,7 @@
 		}
 	}
 }
-#else
+#else  // non-duckbox
 void CVFD::ShowText(const char * str)
 {
 	if (fd < 0 || !support_text)
@@ -1337,11 +1737,26 @@
 	if (number < 0)
 		return;
 	
+//	printf("CVFD::ShowNumber: [%d]\n", number);
 #ifdef BOXMODEL_CS_HD2
 	int ret = ioctl(fd, IOC_FP_SET_NUMBER, number);
-	if(ret < 0) {
+	if (ret < 0)
+	{
 		support_numbers = false;
 		perror("IOC_FP_SET_NUMBER");
+	}
+#else
+	{
+		char buffer[VFDLENGTH + 1];
+		int n;
+
+		memset (buffer, 0, sizeof(buffer));
+#if defined (BOXMODEL_HS7119) || defined (BOXMODEL_HS7810A) || defined (BOXMODEL_HS7819)
+		n = sprintf(buffer, "%04d", number);
+#else
+		n = sprintf(buffer, "%4d", number);
+#endif
+		CVFD::ShowText(buffer);
 	}
 #endif
 }
@@ -1430,10 +1845,10 @@
 /*****************************************************************************************/
 //showFilelist
 /*****************************************************************************************/
-#define BAR_POS_X               114
-#define BAR_POS_Y                10
-#define BAR_POS_WIDTH     6
-#define BAR_POS_HEIGTH   40
+#define BAR_POS_X     114
+#define BAR_POS_Y      10
+#define BAR_POS_WIDTH   6
+#define BAR_POS_HEIGTH 40
 
 void CVFD::showFilelist(int flist_pos,CFileList* flist,const char * const mainDir)
 {
@@ -1670,5 +2085,4 @@
 }
 /*****************************************************************************************/
 #endif // VFD_UPDATE
-
-
+// vim:ts=4

